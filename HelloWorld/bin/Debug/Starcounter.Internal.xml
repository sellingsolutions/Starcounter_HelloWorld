<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Starcounter.Internal</name>
    </assembly>
    <members>
        <member name="T:Starcounter.Internal.AppScope">
            <summary>
            Simple utility class that support a code sequence to run
            within the scope of a named application and then switch
            back to the (global) application scope of the previous
            application when the scope end.
            </summary>
            <example>
            // Either use 
            using (new AppScope("myapp")) { ... }
            // or
            AppScope.RunWithin("myapp", () => { ... });
            </example>
        </member>
        <member name="M:Starcounter.Internal.AppScope.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Starcounter.Internal.AppScope"/> and switch the
            global application context to the named application.
            </summary>
            <param name="applicationName">The name of the application
            to scope.
            </param>
        </member>
        <member name="M:Starcounter.Internal.AppScope.RunWithin(System.String,System.Action)">
            <summary>
            Runs the given code within the scope of the named
            application.
            </summary>
            <param name="appName">Name of the application.</param>
            <param name="code">Code to run.</param>
        </member>
        <member name="T:Starcounter.Internal.bmx">
            <summary>
            Class bmx
            </summary>
        </member>
        <member name="T:Starcounter.Internal.bmx.BMX_TASK_INFO">
            <summary>
            Struct BMX_TASK_INFO
            </summary>
        </member>
        <member name="T:Starcounter.Internal.bmx.BMX_HANDLER_CALLBACK">
            <summary>
            A callback from BMX layer.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StatisticsConstants">
            <summary>
            Related to test statistics.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StatisticsConstants.StatsUriWithParams">
            <summary>
            URI on which the statistics should be sent.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterConstants">
            <summary>
            StarcounterConstants
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.DefaultDatabaseName">
            <summary>
            Defines the default name to use when no information about a
            named database is given in a certain context, for example when
            starting an executable.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.LocalServiceAccount">
             <summary>
            Defines the Local Service Account name to run the Starcounter service under this account.
             </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.MaximumSchedulersNumber">
            <summary>
            Maximum possible schedulers number.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ScheduleTaskFullInputQueueRetries">
            <summary>
            Number of retries to schedule a task if the input queue is full.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.StarcounterSystemUriPrefix">
            <summary>
            Internal system handlers prefix.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.HtmlMergerPrefix">
            <summary>
            HTML merger URI prefix.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.WebRootFolderName">
            <summary>
            Name of the Web-root directory.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterConstants.NetworkConstants">
            <summary>
            Network related constants.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkConstants.CRLF">
            <summary>
            End of line for HTTP.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkConstants.CRLFCRLF">
            <summary>
            Double end of line for HTTP.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkConstants.MaxResponseSize">
            <summary>
            The maximum allowed size (in bytes) that one response can be. 
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterConstants.ProgramNames">
            <summary>
            Defines the program names.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScService">
            <summary>
            ScService
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScCode">
            <summary>
            ScCode
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScData">
            <summary>
            ScData
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScDbLog">
            <summary>
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScNetworkGateway">
            <summary>
            ScNetworkGateway
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScWeaver">
            <summary>
            ScWeaver
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScSqlParser">
            <summary>
            ScSql
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScCleaner">
            <summary>
            Name of the cleaner tool.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ProductName">
            <summary>
            Just represents the product name.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScAdminServer">
            <summary>
            Gets the name of the code host process that runs the
            Starcounter admin server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.ProgramNames.ScTrayIcon">
            <summary>
            ScTrayIcon
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterConstants.NetworkPorts">
            <summary>
            Defines the well known network ports.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultUnspecifiedPort">
            <summary>
            Default value for the port that is not specified by user.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultPersonalServerUserHttpPort">
            <summary>
            Default user port for Personal server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultPersonalServerUserHttpPort_String">
            <summary>
            Default user port for Personal server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSystemServerUserHttpPort">
            <summary>
            Default user port for System server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSystemServerUserHttpPort_String">
            <summary>
            Default user port for System server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultPersonalServerSystemHttpPort">
            <summary>
            Default user port for Personal server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultPersonalServerAggregationPort">
            <summary>
            Default aggregation port for Personal server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultPersonalServerSystemHttpPort_String">
            <summary>
            Default user port for Personal server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSystemServerSystemHttpPort">
            <summary>
            Default system port for System server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSystemServerAggregationPort">
            <summary>
            Default aggregation port for System server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSystemServerSystemHttpPort_String">
            <summary>
            Default system port for System server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultPersonalPrologSqlProcessPort">
            <summary>
            Default Prolog SQL TCP port.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultPersonalPrologSqlProcessPort_String">
            <summary>
            Default Prolog SQL TCP port.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSystemPrologSqlProcessPort">
            <summary>
            Default Prolog SQL TCP port.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSystemPrologSqlProcessPort_String">
            <summary>
            Default Prolog SQL TCP port.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.NetworkPorts.DefaultSessionTimeoutMinutes">
            <summary>
            Default session timeout.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterConstants.BootstrapCommandNames">
            <summary>
            Defines the commands this program accepts.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapCommandNames.Start">
            <summary>
            Defines the name of the Start command.
            </summary>
            <remarks>
            The Start command is the default command and can hence
            be omitted on the command line.
            </remarks>
        </member>
        <member name="T:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames">
            <summary>
            Defines the options the "Start" command accepts.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.DatabaseDir">
            <summary>
            Specifies the database directory to use.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.OutputDir">
            <summary>
            Specifies the output directory to use.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.TempDir">
            <summary>
            Specifies the temporary directory to use.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.TransactionLogDirectory">
            <summary>
            Defines the name of the argument allowing a transaction log
            directory to be given.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.ServerName">
            <summary>
            Specifies the name of Starcounter server which started the database.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.ChunksNumber">
            <summary>
            Specifies the total number of chunks used for shared memory communication.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.GatewayWorkersNumber">
            <summary>
            Number of workers used in gateway.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.SQLProcessPort">
            <summary>
            Specifies TCP/IP port to be used by SQL parser.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.DefaultUserHttpPort">
            <summary>
            Default HTTP port for user code.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.DefaultSessionTimeoutMinutes">
            <summary>
            Default session timeout.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.DefaultSystemHttpPort">
            <summary>
            Default HTTP port for system code.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.SchedulerCount">
            <summary>
            Specifies the number of schedulers.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.NoNetworkGateway">
            <summary>
            Indicates if this host Apps is not utilizing the network gateway.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.AutoStartExePath">
            <summary>
            Specifies the path to executable that should be run on startup.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.UserArguments">
            <summary>
            User command line arguments.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.WorkingDir">
            <summary>
            Explicit working directory.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterConstants.BootstrapOptionNames.EnableTraceLogging">
            <summary>
            Holds the name of the command-line allowing a program to install
            a trace listener that writes every trace to the log.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.CodeReuseConstants">
            <summary>
            Used simply for reuse in code.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.CurrentVersion">
            <summary>
            StarcounterConstants
            </summary>
        </member>
        <member name="F:Starcounter.Internal.CurrentVersion.Version">
            <summary>
            This Starcounter version.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.CurrentVersion.channelName_">
            <summary>
            Internal channel name.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.CurrentVersion.ChannelName">
            <summary>
            This name of channel for this version.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.CurrentVersion.EditionName">
            <summary>
            This name of edition for this version.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.CurrentVersion.VersionDate">
            <summary>
            This Starcounter version date.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.BMX_HEADER_MAX_SIZE_BYTES">
            <summary>
            Maximum size of BMX header in the beginning of the chunk
            after which the gateway data can be placed.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.CHUNK_OFFSET_SOCKET_DATA">
            <summary>
            Offset of socket data in chunk.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.BMX_HANDLER_SIZE">
            <summary>
            Data offset/size constants. 
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.InvalidUriMatcherHandlerId">
            <summary>
            Invalid URI matcher handler index.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.SESSION_STRING_LEN_CHARS">
            <summary>
            Session string length in characters.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.SESSION_STRUCT_SIZE">
            <summary>
            Size of the session structure in bytes.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.MixedCodeConstants.SOCKET_DATA_FLAGS">
            <summary>
            Offsets in gateway socket data.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.MixedCodeConstants.HTTP_METHODS">
            <summary>
            Enum HTTP_METHODS
            </summary>
        </member>
        <member name="T:Starcounter.Internal.MixedCodeConstants.AggregationMessageTypes">
            <summary>
            Types of messages used in aggregation.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.MixedCodeConstants.AggregationMessageFlags">
            <summary>
            Different specific flags for aggregation.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.INVALID_CHUNK_INDEX">
            <summary>
            Invalid chunk index.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.SOCKET_DATA_OFFSET_SESSION">
            <summary>
            Offsets in socket data and chunk.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.MAX_TOTAL_NUMBER_OF_HANDLERS">
            <summary>
            Maxiumum total number of handlers.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.MAX_URI_MATCHING_CODE_BYTES">
            <summary>
            Maxiumum total number of bytes for URI codegen.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.MAX_URI_CALLBACK_PARAMS">
            <summary>
            Maximum number of URI callback parameters.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.PARAMS_INFO_MAX_SIZE_BYTES">
            <summary>
            Parameters info max size bytes.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.SHM_CHUNK_SIZE">
            <summary>
            Shared memory chunk size.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.SHM_CHUNKS_DEFAULT_NUMBER">
            <summary>
            Shared memory chunks default number.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.LINKED_CHUNKS_FLAG">
            <summary>
            Linked chunk flag.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.CHUNK_NUM_CLONE_BYTES">
            <summary>
            Number of clone bytes in chunk.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.CHUNK_LINK_SIZE">
            <summary>
            Chunk link size.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.CHUNK_MAX_DATA_BYTES">
            <summary>
            Chunk data max size.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.SOCKET_DATA_MAX_SIZE">
            <summary>
            Socket data max size.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.MAX_EXTRA_LINKED_IPC_CHUNKS">
            <summary>
            Maximum extra linked IPC chunks.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.MAX_BYTES_EXTRA_LINKED_IPC_CHUNKS">
            <summary>
            Maximum linked chunks bytes.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.SOCKET_DATA_BLOB_SIZE_BYTES">
            <summary>
            Size of socket data blob.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.EndOfRequest">
            <summary>
            End of internal requests.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.DefaultPersonalServerNameUpper">
            <summary>
            Example of string constant.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.GatewayInternalSystemPortSettingName">
            <summary>
            Gateway internal system port setting name.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.GatewayAggregationPortSettingName">
            <summary>
            Gateway aggregation port setting name.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.ScSessionCookieName">
            <summary>
            Name of session cookie.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.ServerDataDirectory">
            <summary>
            Holds a constant read-only value representing the name
            of the environment variable containing the path to the
            Starcounter data repository on current machine
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.ServerConfigDirName">
            <summary>
            Server directory XML element name in configuration file.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.EmptyAppName">
            <summary>
            Empty application name.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.ServerConfigParentXmlName">
            <summary>
            Server directory parent XML element name.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.ScErrorCodeHttpHeader">
            <summary>
            HTTP header used for Starcounter error code transfer.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.MixedCodeConstants.ScSessionCookieNameLength">
            <summary>
            Session cookie length.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.MixedCodeConstants.NetworkProtocolType">
            <summary>
            Denotes the type of network protocol.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.MixedCodeConstants.WebSocketDataTypes">
            <summary>
            WebSocket data types.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.DirectoryExtensions">
            <summary>
            Utility methods for directories.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.DirectoryExtensions.EqualDirectories(System.String,System.String)">
            <summary>
            Compare two directory paths to see if the reference the same folder.
            </summary>
            <param name="dir1">First path</param>
            <param name="dir2">Second path</param>
            <returns>True if both paths reference the same folder</returns>
        </member>
        <member name="T:Starcounter.Internal.Guard">
            <summary>
            Guard utility methods, usable to guard any public API for correct input
            with a minimum of fuzz.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Guard.NotNull(System.Object,System.String)">
            <summary>
            Guard the given object is not null.
            </summary>
            <param name="value">The object to guard.</param>
            <param name="parameterName">The name of the parameter that reference
            the given object.</param>
        </member>
        <member name="M:Starcounter.Internal.Guard.NotNullOrEmpty(System.String,System.String)">
            <summary>
            Guard the given <c>string</c> is not null or empty.
            </summary>
            <param name="value">The object to guard.</param>
            <param name="parameterName">The name of the parameter that reference
            the given object.</param>
        </member>
        <member name="M:Starcounter.Internal.Guard.DirectoryExists(System.String,System.String)">
            <summary>
            Guard that <c>directory</c> is not null, not empty and contains the path
            to an existing directory.
            </summary>
            <param name="directory">The directory to verify.</param>
            <param name="parameterName">The name of the parameter that reference
            the given directory.</param>
        </member>
        <member name="M:Starcounter.Internal.Guard.FileExists(System.String,System.String)">
            <summary>
            Guard that <c>file</c> is not null, not empty and contains the path
            to an existing file.
            </summary>
            <param name="file">The file to verify.</param>
            <param name="parameterName">The name of the parameter that reference
            the given file.</param>
        </member>
        <member name="M:Starcounter.Internal.Guard.FileExistsInDirectory(System.String,System.String,System.String)">
            <summary>
            Guard that <c>file</c> is not null, not empty and contains the path
            to an existing file. If the file is path-rooted, it need to exist. If
            it's relative, it need to exist in the given directory.
            </summary>
            <param name="file">The file to verify.</param>
            <param name="directory">The directory the file could be stored in.</param>
            <param name="parameterName">The name of the parameter that reference
            the given file.</param>
        </member>
        <member name="M:Starcounter.Internal.Guard.IsAssignableFrom(System.Type,System.Type,System.String)">
            <summary>
            Guard that <c>candidate</c> and <c>constraint</c> is not null and that
            <c>constraint</c> is assignable from <c>candidate</c>.
            </summary>
            <param name="candidate">The candidate to guard.</param>
            <param name="constraint">The constraint to guard for.</param>
            <param name="parameterName">Name of the parameter <c>candidate</c> is
            referenced from.</param>
        </member>
        <member name="M:Starcounter.Internal.Guard.IsNotAbstract(System.Type,System.String)">
            <summary>
            Guard <c>candidate</c> is not null and is not abstract.
            </summary>
            <param name="candidate">The candidate to validate.</param>
            <param name="parameterName">Name of parameter referencing the candidate.</param>
        </member>
        <member name="M:Starcounter.Internal.Guard.HasPublicDefaultConstructor(System.Type,System.String)">
            <summary>
            Guard <c>candidate</c> is not null and has a public default constructor.
            </summary>
            <param name="candidate">The candidate to validate.</param>
            <param name="parameterName">Name of parameter referencing the candidate.</param>
        </member>
        <member name="T:Starcounter.Internal.EnvironmentExtensions">
            <summary>
            Provides a set of extented utility methods to work with the current
            environment and platform.
            </summary>
            <remarks>
            <see cref="T:System.Environment"/>
            </remarks>
        </member>
        <member name="M:Starcounter.Internal.EnvironmentExtensions.GetEnvironmentInteger(System.String,System.Int32)">
            <summary>
            Gets an environment variable value, parsed as an integer. If the
            environment variable is not set or parsing it to an integer fails,
            the <paramref name="fallback"/> is returned.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <param name="fallback">The fallback to use if the variable was not
            defined or was not possible to parse to an integer.</param>
            <returns>The value of the given variable, if defined and numeric;
            the <paramref name="fallback"/> otherwise.</returns>
        </member>
        <member name="T:Starcounter.Internal.NetworkGateway">
            <summary>
            Network Gateway.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.NetworkGateway.ReverseProxy">
            <summary>
            Reverse Proxy.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.NetworkGateway.UriAlias">
            <summary>
            Uri Alias.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.HelperFunctions.GetClassStemIdentifier(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Internal.HelperFunctions.GetClassStemIdentifier(System.Type,System.Int32@)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Internal.HelperFunctions.GetClassDeclarationSyntax(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Internal.HelperFunctions.GetClassDeclarationSyntax(System.Type,System.Type[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Internal.UriHelper.GetMethodFromString(System.String)">
            <summary>
            Gets method enumeration from given string.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="T:Starcounter.Internal.HttpHeadersUtf8">
            <summary>
            Contains static members for all headers used in request/response
            creation as bytearrays in Utf8 format.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.Finalizer">
            <summary>
            Generic object finalizer.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.Finalizer.obj_">
            <summary>
            Object that should be finalized.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Finalizer.#ctor(Starcounter.Internal.Finalizing)">
            <summary>
            Constructor.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:Starcounter.Internal.Finalizing">
            <summary>
            Finalizing class.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.Finalizing.finalizer_">
            <summary>
            Reference to finalizer object.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Finalizing.DestroyByFinalizer">
            <summary>
            Destroy by finalizer.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Finalizing.CreateFinalizer">
            <summary>
            Creates finalizer.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Finalizing.HasFinalizer">
            <summary>
            Has finalizer attached?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Internal.Finalizing.UnLinkFinalizer">
            <summary>
            Unlinking finalizer.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.SocketStruct">
            <summary>
            Socket structure.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.SocketStruct.socketUniqueId_">
            <summary>
            Unique socket id on gateway.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.SocketStruct.socketIndexNum_">
            <summary>
            Socket index on gateway.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.SocketStruct.gatewayWorkerId_">
            <summary>
            Gateway worker id.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.SocketStruct.SocketUniqueId">
            <summary>
            Unique socket id on gateway.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.SocketStruct.SocketIndexNum">
            <summary>
            Socket index on gateway.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.SocketStruct.GatewayWorkerId">
            <summary>
            Gateway worker id.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.Init(System.UInt32,System.UInt64,System.Byte)">
            <summary>
            Initializes socket struct.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.Init(Starcounter.NetworkDataStream)">
            <summary>
            Creating socket structure from data stream.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.Kill">
            <summary>
            Invalidates socket struct.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.IsDead">
            <summary>
            Checks if socket struct is dead.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.FromLowerUpper(System.UInt64,System.UInt64)">
            <summary>
            Creates socket struct from lower and upper parts.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.ToLowerUpper(Starcounter.Internal.SocketStruct,System.UInt64@,System.UInt64@)">
            <summary>
            Convert socket struct to lower and upper parts.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.ToUInt64">
            <summary>
            Converts socket id to UInt64.
            [6-4-20]
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.FromUInt64(System.UInt64)">
            <summary>
            Converts socket data from UInt64:
            [6-4-20]
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.FromString(System.String)">
            <summary>
            Converts a string to socket.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.SerializeToBytes(System.Byte[])">
            <summary>
            Serializing session structure to bytes.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.SocketStruct.GetString">
            <summary>
            Converts socket struct to string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Starcounter.Internal.REST.HttpStatusCodeAndReason">
            <summary>
            Provides functionality to allow simple usage and validation of
            HTTP/1.1 response status codes and reasons, as defined in section
            <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1.1">
            6.1.1</see> of said HTTP specification (RFC2616).
            </summary>
        </member>
        <member name="F:Starcounter.Internal.REST.HttpStatusCodeAndReason.ReasonNotAvailable">
            <summary>
            Reason phrase used if no reason was given.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.REST.HttpStatusCodeAndReason.StatusCode">
            <summary>
            Gets the response status code.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.REST.HttpStatusCodeAndReason.ReasonPhrase">
            <summary>
            Gets the response reason phrase.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.GetRecommendedHttp11ReasonPhrase(System.Int32)">
            <summary>
            Gets the recommended reason phrase of the response status code
            part of the HTTP/1.1 specification.
            </summary>
            <param name="code">The response status code.</param>
            <returns>The recommended reason phrase for the given code.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            either the given code is either outside the range of given
            status codes (including extension codes), i.e. 0-999; or
            when the given code is not one of the codes defined in the
            specification.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.GetRecommendedHttp11ReasonPhrase(System.Net.HttpStatusCode)">
            <summary>
            Gets the recommended reason phrase of the response status code
            part of the HTTP/1.1 specification.
            </summary>
            <param name="code">The response status code, given as a
            <see cref="T:System.Net.HttpStatusCode"/> instance.</param>
            <returns>The recommended reason phrase for the given code.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            either the given code is either outside the range of given
            status codes (including extension codes), i.e. 0-999; or
            when the given code is not one of the codes defined in the
            specification.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.TryGetRecommendedHttp11ReasonPhrase(System.Int32,System.String@)">
            <summary>
            Gets the recommended reason phrase of the response status code
            part of the HTTP/1.1 specification.
            </summary>
            <param name="code">The response status code.</param>
            <param name="phrase">When this method returns, contains the value
            associated with the given code, if the code is recognized; otherwise,
            null.</param>
            <returns>True if the code was recognized as one of the standard
            codes; otherwise, false.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            the given code is outside the range of given status codes (including
            extension codes), i.e. 0-999.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.TryGetRecommendedHttp11ReasonPhrase(System.Net.HttpStatusCode,System.String@)">
            <summary>
            Gets the recommended reason phrase of the response status code
            part of the HTTP/1.1 specification.
            </summary>
            <param name="code">The response status code, given as a
            <see cref="T:System.Net.HttpStatusCode"/> instance.</param>
            <param name="phrase">When this method returns, contains the value
            associated with the given code, if the code is recognized; otherwise,
            null.</param>
            <returns>True if the code was recognized as one of the standard
            codes; otherwise, false.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            the given code is outside the range of given status codes (including
            extension codes), i.e. 0-999.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.ToStatusLineFormat(System.Int32,System.String)">
            <summary>
            Formats a string confirming to the HTTP/1.1 response status line
            tokens 2 and 3 from the given code and reason.
            </summary>
            <param name="code">The status code.</param>
            <param name="reason">The reason phrase.</param>
            <returns>A string formatted as described in the summary.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            the given code is outside the range of given status codes (including
            extension codes), i.e. 0-999.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.ToStatusLineFormatNoValidate(System.Int32,System.String)">
            <summary>
            Formats a string confirming to the HTTP/1.1 response status line
            tokens 2 and 3 from the given code and reason. This method does not
            check the validness of the specified code.
            </summary>
            <param name="code">The status code.</param>
            <param name="reason">The reason phrase.</param>
            <returns>A string formatted as described in the summary.</returns>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Starcounter.Internal.REST.HttpStatusCodeAndReason"/> with the
            given status code. The reason phrase is either set to the recommended
            for the given code according to the HTTP/1.1 specification, if the
            code is known by said specification. Or, if the code is an extension
            to the known codes, to the value of <see cref="F:Starcounter.Internal.REST.HttpStatusCodeAndReason.ReasonNotAvailable"/>.
            </summary>
            <param name="code">The status code to use.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            the given code is outside the range of given status codes (including
            extension codes), i.e. 0-999.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new <see cref="T:Starcounter.Internal.REST.HttpStatusCodeAndReason"/> with the
            given status code and the given reason phrase. This constructor
            leaves it up to the caller to combine any status code with a custom
            reason; recommended reasons of the specification is not considered.
            </summary>
            <param name="code">The status code to use.</param>
            <param name="customReason">The reason phrase to use.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            the given code is outside the range of given status codes (including
            extension codes), i.e. 0-999.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.#ctor(System.Net.HttpStatusCode)">
            <summary>
            Initializes a new <see cref="T:Starcounter.Internal.REST.HttpStatusCodeAndReason"/> with the
            given status code. The reason phrase is either set to the recommended
            for the given code according to the HTTP/1.1 specification, if the
            code is known by said specification. Or, if the code is an extension
            to the known codes, to the value of <see cref="F:Starcounter.Internal.REST.HttpStatusCodeAndReason.ReasonNotAvailable"/>.
            </summary>
            <param name="code">The status code to use.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            the given code is outside the range of given status codes (including
            extension codes), i.e. 0-999.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Initializes a new <see cref="T:Starcounter.Internal.REST.HttpStatusCodeAndReason"/> with the
            given status code and the given reason phrase. This constructor
            leaves it up to the caller to combine any status code with a custom
            reason; recommended reasons of the specification is not considered.
            </summary>
            <param name="code">The status code to use.</param>
            <param name="customReason">The reason phrase to use.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when
            the given code is outside the range of given status codes (including
            extension codes), i.e. 0-999.</exception>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.Equals(System.Object)">
            <summary>
            Compares the current instance with the one given for equality.
            Two instances are considered valid if the have the same status
            code.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if <paramref name="obj"/> is considered equal to
            the current instance; else false.</returns>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.Equals(Starcounter.Internal.REST.HttpStatusCodeAndReason)">
            <summary>
            Compares the current instance with the one given for equality.
            Two instances are considered valid if the have the same status
            code.
            </summary>
            <param name="other">The object to compare to.</param>
            <returns>True if <paramref name="other"/> is considered equal to
            the current instance; else false.</returns>
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Starcounter.Internal.REST.HttpStatusCodeAndReason.ToString">
            <summary>
            Returns the string representation of the current instance, in
            a format compliant with the 6.1 and 6.1.1 on RFC2616, HTTP/1.1.
            </summary>
            <returns>A string representation of the current instance.</returns>
        </member>
        <member name="T:Starcounter.Internal.Diagnostics">
            <summary>
            </summary>
        </member>
        <member name="P:Starcounter.Internal.Diagnostics.IsGlobalTraceLoggingEnabled">
            <summary>
            If set, assures that relevant primary processes enable trace
            logging.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Diagnostics.WriteTrace(System.String,System.Int64,System.String)">
            <summary>
            </summary>
            <param name="source"></param>
            <param name="elapsedTicks"></param>
            <param name="message"></param>
        </member>
        <member name="M:Starcounter.Internal.Diagnostics.TryParseTrace(System.String,System.String@,System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="F:Starcounter.Internal.Diagnostics.TimeStampFilePath_">
            <summary>
            Path to time stamp file.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Diagnostics.WriteTimeStamp(System.String,System.String)">
            <summary>
            Writes current time
            </summary>
            <param name="message"></param>
        </member>
        <member name="F:Starcounter.Internal.Diagnostics.LogHostException">
            <summary>
            Delegate used to log host exceptions in Starcounter.Internal.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Diagnostics.SetHostLogException(System.Action{System.Exception})">
            <summary>
            Setting delegate for logging host exceptions.
            </summary>
            <param name="logHostException"></param>
        </member>
        <member name="M:Starcounter.Internal.Diagnostics.StartProcessAndWaitForExit(System.String,System.String,System.Int32)">
            <summary>
            Starts given process and waits for it exit.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.IResponseConverter">
            <summary>
            Allow code snippets in the form of resource converters to take part in
            the servers provision of responses based on POCO objects returned from
            user handlers. Certain extension points exist that enable instances of
            this interface to hook into the request pipeline.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.IResponseConverter.Convert(Starcounter.Request,Starcounter.Response,System.String@)">
            <summary>
            Converts the given object, returned from a handler"/>.
            </summary>
            <param name="request">The request that invoked handler returning the
            resource that are now to be converted.</param>
            <param name="response">The response containing the resource to convert.</param>
            <param name="resultingMimetype">The MIME type of the content actually
            returned by the implemented method.</param>
            <returns>A byte array with the content produced.</returns>
        </member>
        <member name="T:Starcounter.Internal.Intrinsics">
            <summary>
            Class Intrinsics
            </summary>
        </member>
        <member name="T:Starcounter.Internal.Intrinsics.MemCpyFunction">
            <summary>
            Delegate MemCpyFunction
            </summary>
            <param name="des">The DES.</param>
            <param name="src">The SRC.</param>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="F:Starcounter.Internal.Intrinsics.MemCpy">
            <summary>
            The mem cpy
            </summary>
        </member>
        <member name="M:Starcounter.Internal.Intrinsics.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Starcounter.Internal.Intrinsics" /> class.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.KeyValueBinary">
            <summary>
            Utility class allowing a simple and fast serialization/deserialization
            of key-value pairs, usually given as a <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
            <remarks>
            <para>
            Current limitations:
            1) Keys can not contain delimiter (currently '=').
            2) The maximum size of key+value is KeyValueBinary.PropertyPairMaxSize (998).
            3) If value is NULL, key can not be string.Empty
            </para>
            <para>
            Serialized instances look like:
            000[Key]=[Value]
            where
            * 000 is the length of the coming key-value pair,
            * key is the name of the key,
            * '=' is the delimiter,
            * and [Value] holds the actual value.
            </para>
            <para>
            Currently, the only error handling in this class is implemented as asserts.
            </para>
            </remarks>
        </member>
        <member name="F:Starcounter.Internal.KeyValueBinary.PropertyPairMaxSize">
            <summary>
            Gets the maximum size of a key-value pair, i.e. the combination of
            the name of the key and the actual property value.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.KeyValueBinary.Delimiter">
            <summary>
            Gets the delimiter to use during serialization/deserialization.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.#ctor(System.String)">
            <summary>
            Prevent instantiation without using factory methods.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.KeyValueBinary.Value">
            <summary>
            The (opaque) value representing the key/value data after
            it has been serialized using a factory method, like the
            <see cref="M:Starcounter.Internal.KeyValueBinary.FromDictionary(System.Collections.Generic.Dictionary{System.String,System.String})"/> method.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.FromDictionary(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Serializes the given <see cref="T:System.Collections.Generic.Dictionary`2"/> to a in instance of
            <see cref="T:Starcounter.Internal.KeyValueBinary"/>.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.Dictionary`2"/> to serialize.</param>
            <returns>A <see cref="T:Starcounter.Internal.KeyValueBinary"/> holding all items serialized from the 
            given <see cref="T:System.Collections.Generic.Dictionary`2"/>.</returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.FromArray(System.Object[])">
            <summary>
            Serializes the given <see cref="T:object[]"/> to a in instance of
            <see cref="T:Starcounter.Internal.KeyValueBinary"/>. The actual data that will be serialized
            is produced by calling <see cref="M:System.Object.ToString"/> on each item
            before it is serialized.
            </summary>
            <remarks>
            Individual items in the serialized results will be keyed by their
            position in the array, like "0=[value0], 1=[value1]..."
            </remarks>
            <param name="array">The array to serialize.</param>
            <returns>A <see cref="T:Starcounter.Internal.KeyValueBinary"/> holding all items serialized from the 
            given <see cref="T:object[]"/>.</returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.FromArray(System.Object[],System.Int32)">
            <summary>
            Serializes the given <see cref="T:object[]"/> to a in instance of
            <see cref="T:Starcounter.Internal.KeyValueBinary"/>. The actual data that will be serialized
            is produced by calling <see cref="M:System.Object.ToString"/> on each item
            before it is serialized.
            </summary>
            <remarks>
            Individual items in the serialized results will be keyed by their
            position in the array, like "0=[value0], 1=[value1]..."
            </remarks>
            <param name="array">The array to serialize.</param>
            <param name="startIndex">The index to start from when retreiving
            the items to serialize from the given array.</param>
            <returns>A <see cref="T:Starcounter.Internal.KeyValueBinary"/> holding all items serialized from the 
            given <see cref="T:object[]"/>.</returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.ToDictionary(System.Byte[])">
            <summary>
            Creates a dictionary from a byte array, previosuly serialized using the
            <see cref="M:Starcounter.Internal.KeyValueBinary.FromDictionary(System.Collections.Generic.Dictionary{System.String,System.String})"/> method.
            </summary>
            <param name="binary">The data to deserialized</param>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> with all key/value pairs found
            in the given binary.</returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.ToDictionary(System.String)">
            <summary>
            Creates a dictionary from a string, previosuly serialized using one
            of the factory methods, e.g <see cref="M:Starcounter.Internal.KeyValueBinary.FromDictionary(System.Collections.Generic.Dictionary{System.String,System.String})"/>.
            </summary>
            <param name="content">The string to deserialize</param>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> with all key/value pairs found
            in the given string.</returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.ToArray(System.String)">
            <summary>
            Creates a string array from a string, previosuly serialized using one
            of the factory methods, usually <see cref="M:Starcounter.Internal.KeyValueBinary.FromArray(System.Object[])"/>.
            </summary>
            <seealso cref="M:Starcounter.Internal.KeyValueBinary.ToArray"/>
            <param name="content">The serialized content to deserialize.</param>
            <returns>A <see cref="T:string[]"/> with all values found in the
            serialized instance of <see cref="T:Starcounter.Internal.KeyValueBinary"/> represented by
            the given <paramref name="content"/>.</returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.ToBytes">
            <summary>
            Returns the value of the current <see cref="T:Starcounter.Internal.KeyValueBinary"/>
            as an array of bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.ToDictionary">
            <summary>
            Returns the value of the current <see cref="T:Starcounter.Internal.KeyValueBinary"/>
            as a <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.ToArray">
            <summary>
            Creates a string array from the current instance, previosuly serialized
            using one of the factory methods, usually <see cref="M:Starcounter.Internal.KeyValueBinary.FromArray(System.Object[])"/>.
            </summary>
            <returns>
            A <see cref="T:string[]"/> with all values found in the current serialized
            instance of <see cref="T:Starcounter.Internal.KeyValueBinary"/>. Keys are ignored.
            </returns>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.ParseContent(System.String,System.Action{System.String,System.String})">
            <summary>
            Parses the content.
            </summary>
            <param name="content">The content.</param>
            <param name="receiver">The receiver.</param>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Serializes the key value pair.
            </summary>
            <param name="builder">The builder.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Starcounter.Internal.KeyValueBinary.AppendTerminatorAndConvertToString(System.Text.StringBuilder)">
            <summary>
            Appends the terminator and convert to string.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment">
            <summary>
            Class StarcounterEnvironment
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.IsApplicationNameLegal(System.String)">
            <summary>
            Checks if given application name is legal.
            </summary>
            <param name="appName">Application name to test.</param>
            <returns>True is name is allowed.</returns>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.cm3_get_cpun(System.Void*,System.Byte*)">
            <summary>
            Gets the number of schedulers.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.DatabaseNameLower">
            <summary>
            Name of the database.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.GetFieldName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Basically returns the string name of the field.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.SkipRequestFiltersGlobal">
            <summary>
            Skip request filters global flag.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.SkipResponseFiltersGlobal">
            <summary>
            Skip response filters global flag.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.WrapJsonInNamespaces">
            <summary>
            Wrap JSON in namespaces.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.UseAlternativeNamespacesForJson">
            <summary>
            If set to true and the option above is enabled, a new scheme of namespacing 
            json will be used that allows more than one response from an app.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.EnforceURINamespaces">
            <summary>
            Flag to enforce URI namespaces.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.MergeJsonSiblings">
            <summary>
            Merge Json siblings.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.XFilePathHeader">
            <summary>
            Add X-File-Path header to static files HTTP responses.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.RequestFiltersEnabled">
            <summary>
            Enables or disables the filters for external requests.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.UriMappingEnabled">
            <summary>
            Enables or disables the ordinary mapping.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.OntologyMappingEnabled">
            <summary>
            Enables or disables the ontology mapping.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.NoNetworkGatewayFlag">
            <summary>
            Set if there is no network gateway.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.CallContextAppName">
            <summary>
            CallContext application name variable.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.AppName">
            <summary>
            Name of the application.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.RunWithinApplication(System.String,System.Action)">
            <summary>
            Runs a given delegate within a certain application context.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.RunWithinApplicationInternal(System.String,System.Action)">
            <summary>
            Runs a given delegate within a certain application context.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.OrigMapperCallerAppName">
            <summary>
            Name of the application.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.currentSchedulerId_">
            <summary>
            Current scheduler ID value.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.InvalidSchedulerId">
            <summary>
            Invalid scheduler id value (indicates that you are not on scheduler).
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.invalidSchedulerIdValue_">
            <summary>
            Current value of invalid scheduler id (needed to suport Unit tests basically).
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.InvalidateSchedulerId">
            <summary>
            Invalidate scheduler id value.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.IsOnScheduler">
            <summary>
            Checks if execution occurs on scheduler.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.CurrentSchedulerId">
            <summary>
            Obtains current scheduler id.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.cm3_get_cpuc(System.Void*,System.Byte*)">
            <summary>
            Gets the number of schedulers.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.SchedulerCount">
            <summary>
            Gets the number of schedulers.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.IsCodeHosted">
            <summary>
            Returns if current code is hosted in Starcounter
            (i.e. runs in sccode.exe instance).
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.IsAdministratorApp">
            <summary>
            Is this application a Starcounter Administrator?
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.Server">
            <summary>
            Server configuration.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.Server.ServerDir">
            <summary>
            Path to server directory.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.Gateway">
            <summary>
            Gateway configuration.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.Gateway.NumberOfWorkers">
            <summary>
            Number of gateway workers.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.Gateway.PathToGatewayConfig">
            <summary>
            Path to gateway configuration file.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.Default">
            <summary>
            Default configuration parameters.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Default.UserHttpPort">
            <summary>
            User HTTP port.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Default.SystemHttpPort">
            <summary>
            System HTTP port.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Default.AggregationPort">
            <summary>
            Aggregation port.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Default.SessionTimeoutMinutes">
            <summary>
            Default sessions timeout.
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.InstallationDirectory">
            <summary>
            Gets a value that holds the path of the Starcounter installation
            directory.
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.SetInstallationDirectoryFromEntryAssembly">
            <summary>
            Assigns the Starcounter installation directory for the current process
            based on the calling assembly. Designed to be invoked first/early in
            any of our managed bootstrappers (e.g. the code host, the CLI tools,
            the weaver).
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.DefaultPorts">
            <summary>
            Default network ports that are used by different Starcounter components.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.DefaultPorts.ServerPortRangeSize">
            <summary>
            Maximum size of ports range that can be used by each server.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.DefaultPorts.Database">
            <summary>
            Default port for the database process.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.DefaultPorts.SQLProlog">
            <summary>
            Default port for the Prolog SQL parsing process.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.DefaultPorts.ActivityMonitor">
            <summary>
            Default port for the activity monitor server.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.SpecialVariables">
            <summary>
            Class SpecialVariables
            </summary>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.SpecialVariables.ScConnMaxHitsPerPage">
            <summary>
            Scs the conn max hits per page.
            </summary>
            <returns>System.UInt32.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.VariableNames">
            <summary>
            Environment variable names.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.VariableNames.InstallationDirectory">
            <summary>
            Holds a constant read-only value representing the name
            of the environment variable containing the path to the
            directory where Starcounter is installed.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.VariableNames.DefaultServer">
            <summary>
            Holds a constant read-only value representing the name
            of the environment variable containing the name of the
            default server on the current machine.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.VariableNames.DefaultServerPersonalPort">
            <summary>
            Provides the name of the environment variable key used to
            store the default personal server port for processes, users
            and/or machines.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.VariableNames.DefaultServerSystemPort">
            <summary>
            Provides the name of the environment variable key used to
            store the default system server port for processes, users
            and/or machines.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.VariableNames.GlobalTraceLogging">
            <summary>
            Gets the name of the variable we use to indicate if primary runtime
            processes should enable trace logging.
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.Directories">
            <summary>
            Special directories.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Directories.UserAppDataDirectory">
            <summary>
            Full path to USER application data directory.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Directories.SystemAppDataDirectory">
            <summary>
            Full path to SYSTEM application data directory.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Directories.WeaverTempSubDirectory">
            <summary>
            Weaver temp sub directory.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.Directories.InstallationConfiguration">
            <summary>
            Configuration folder, relative to the installation folder,
            where we keep configuration files like "Personal.xml".
            </summary>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.FileNames">
            <summary>
            Well known file names.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.ClientErrorLog">
            <summary>
            Holds a constant read-only value representing the name
            of the Starcounter GUI administrator program error log.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.ClientStats">
            <summary>
            Holds a constant read-only value representing the name
            of the Starcounter GUI administrator program statistics
            collection file.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.ServerStats">
            <summary>
            Holds a constant read-only value representing the name
            of the Starcounter Server program statistics
            collection file.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.GatewayConfigFileName">
            <summary>
            Gateway configuration file name.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.GatewayConfigSampleFileName">
            <summary>
            Gateway configuration sample file name.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.VersionInfoFileName">
            <summary>
            Holds a constant read-only value representing the name
            of the Starcounter Server/Administrator version information
            NOTE: This code is duplicated in the installer
            \perforce\Starcounter\Dev\Yellow\Main\CoreComponents.Net\Starcounter.InstallerWPF\MainWindow.xaml.cs
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.OverrideAppStoreHost">
            <summary>
            Configuration file (optional),
            Content will override the default appstore host (see InternetAddresses.DefaultAppStoreHost)
            File format: single line containing "host[:port]"
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.RestSettingsFileName">
            <summary>
            Rest API Configuration file (optional),
            
            File format: RestSettings.json
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.FileNames.CollationFileNamePrefix">
            <summary>
            Default collation Filename prefix
            Filename example: TurboText_en-GB_2.dll
                Prefix: TurboText
                Culture: en-GB
                Version: 2
            </summary>
        </member>
        <member name="P:Starcounter.Internal.StarcounterEnvironment.FileNames.InstallationServerConfigReferenceFile">
            <summary>
            Gets the name of the configuration file we host under the
            installation folder that contains the path/reference to
            the server repository directory.
            </summary>
            <remarks>Traditionally named "Personal.xml".</remarks>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.ServerNames">
            <summary>
            Names of Starcounter servers.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.ServerNames.SystemServer">
            <summary>
            Holds a constant read-only value representing the reserved
            name used for the default system level server created by
            the Starcounter install program on machines where this option
            is taken advantage of.
            </summary>
            <remarks>
            Custom servers created manually are not allowed to use this
            name.
            </remarks>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.ServerNames.SystemServerDisplayName">
            <summary>
            Default name postfix for the system server
            (appended in brackets to displayed name).
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.ServerNames.SystemServerServiceName">
            <summary>
            Default name for the system server service.
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.ServerNames.PersonalServer">
            <summary>
            Holds a constant read-only value representing the reserved
            name used for the default user level personal server created by
            the Starcounter install program on machines where this option
            is taken advantage of.
            </summary>
            <remarks>
            Custom servers created manually are not allowed to use this
            name.
            </remarks>
        </member>
        <member name="M:Starcounter.Internal.StarcounterEnvironment.ServerNames.IsRecognizedServerName(System.String)">
            <summary>
            Investigates if the given server name is recognized as one of the
            standard reserved server names.
            </summary>
            <param name="serverName">Name to investigate.</param>
            <returns>True if the name is the name of a recognized server; false
            if not.</returns>
        </member>
        <member name="T:Starcounter.Internal.StarcounterEnvironment.InternetAddresses">
            <summary>
            Class InternetAddresses
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.InternetAddresses.StarcounterWebSite">
            <summary>
            The starcounter web site
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.InternetAddresses.StarcounterForum">
            <summary>
            The starcounter forum
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.InternetAddresses.StarcounterWiki">
            <summary>
            The starcounter wiki
            </summary>
        </member>
        <member name="F:Starcounter.Internal.StarcounterEnvironment.InternetAddresses.AdministratorStartPage">
            <summary>
            The administrator start page
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Starcounter.Internal.StringListExtensions" -->
        <member name="M:Starcounter.Internal.StringListExtensions.AddFormat(System.Collections.Generic.List{System.String},System.String,System.Object[])">
            <summary>
            Adds a string to the list after first making sure it is
            formatted using the given arguments.
            </summary>
            <param name="list">The list to add the formatted result to.</param>
            <param name="format">The formatting string.</param>
            <param name="args">The arguments to use when formatting the
            string.</param>
        </member>
        <member name="M:Starcounter.Internal.StringListExtensions.ToStringFromValues(System.Collections.Generic.List{System.String})">
            <summary>
            Returns a string based on the values stored in <paramref name="list"/>.
            </summary>
            <param name="list">The list whose values should be formatted as a
            string.</param>
            <returns>A string with all values in the given list.</returns>
        </member>
        <member name="M:Starcounter.Internal.StringListExtensions.ReverseOrderDotWords(System.String)">
            <summary>
            Returns reverse order of names in a dot separated string.
            For example, use to reverse order of full class name, which includes
            namespace names.
            </summary>
            <param name="fullName">The input full name string.</param>
            <returns>New string with dot separated names in reverse order</returns>
        </member>
        <member name="M:Starcounter.Internal.StringListExtensions.LastDotWord(System.String)">
            <summary>
            Returns first name, which is before first dot, in full class name.
            </summary>
            <param name="fullName">The full name.</param>
            <returns>The first name without dots.</returns>
        </member>
        <member name="T:Starcounter.CommandLine.CommandLineStringParser">
            <summary>
            Utility class exposing functionality that support splitting of
            strings into string arrays, similar to how it's done by the CRT/CLR.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.CommandLineStringParser.SplitCommandLine(System.String)">
            <summary>
            Splits a command-line string into arguments, similar to how it's
            done by the CRT/CLR.
            </summary>
            <param name="commandLine">The command-line to split.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that can be used
            to iterate over all entries that was the result of the split.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.CommandLineStringParser.Split(System.String,System.Func{System.Char,System.Boolean})">
            <summary>
            Allows a string to be split up in unique entities based on the
            decision of a given delegate.
            </summary>
            <param name="s">The string to split.</param>
            <param name="requiresSplit">The delegate that rules if a given
            character should require a split.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that can be used
            to iterate over all entries that was the result of the split.
            </returns>
        </member>
        <member name="M:Starcounter.CommandLine.CommandLineStringParser.TrimMatchingQuotes(System.String,System.Char)">
            <summary>
            Trims a string based on a pair of matching quotes. Only if the
            match is exact (i.e. there is a starting and an ending quote),
            the trim is executed.
            </summary>
            <param name="input">The string to trim.</param>
            <param name="quote">The qouting character.</param>
            <returns>The trimmed result.</returns>
        </member>
        <member name="T:Starcounter.CommandLine.InvalidCommandLineException">
            <summary>
            Exception thrown when a set of command line arguments doesn't match
            the valid syntax or semantics of a program definition.
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.InvalidCommandLineException.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="M:Starcounter.CommandLine.InvalidCommandLineException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.InvalidCommandLineException" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.InvalidCommandLineException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.InvalidCommandLineException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Starcounter.CommandLine.InvalidCommandLineException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.InvalidCommandLineException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Starcounter.CommandLine.InvalidCommandLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.InvalidCommandLineException" /> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Starcounter.CommandLine.ApplicationArguments">
            <summary>
            Class ApplicationArguments
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.ApplicationArguments.GlobalOptions">
            <summary>
            The global options
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.ApplicationArguments.CommandOptions">
            <summary>
            The command options
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.ApplicationArguments.OptionIndex">
             <summary>
             The option index
             </summary>
             <remarks>
             <para>
             In the option index, every alternative of a certain option
             is present. That is, if the syntax define an option "Database"
             with the alternative name "d", the option index will contain
             two entries if "d" where given, i.e:
             var given = new GivenOption("d", "default", property, "global|command", IsFlag);
             optionIndex["d"] = given;
             optionIndex["Database"] = given;
            </para>
            <para>
             Say this was a global option, then GlobalOptions would contain:
             global["d"] = "default"
             </para>
             </remarks>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.Empty">
            <summary>
            Gets an <see cref="T:Starcounter.CommandLine.ApplicationArguments"/> with no arguments given.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.ApplicationArguments.CommandParameters">
            <summary>
            The command parameters
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.Command">
            <summary>
            Gets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.HasCommmand">
            <summary>
            Gets a value indicating whether this instance has commmand.
            </summary>
            <value><c>true</c> if this instance has commmand; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.IsCommand(System.String)">
            <summary>
            Determines whether the specified command is command.
            </summary>
            <param name="command">The command.</param>
            <returns><c>true</c> if the specified command is command; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">command</exception>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.GetCommandParameterOrNull(System.Int32)">
            <summary>
            Gets a command parameter by index, guarding out of bounds.
            </summary>
            <param name="index">The index of the parameter to get.</param>
            <returns>The command parameter with the given index. If the
            current set of arguments has no command or less parameters
            than what is indicated by <paramref name="index"/>, <c>null</c>
            is returned.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.GetProperty(System.String)">
            <summary>
            Returns the value of a property identified by <paramref name="name" />.
            If invoked with a name that is not found, null is returned.
            </summary>
            <param name="name">The name.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.GetProperty(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Gets the property.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.TryGetProperty(System.String,System.String@)">
            <summary>
            Tries the get property.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.TryGetProperty(System.String,Starcounter.CommandLine.CommandLineSection,System.String@)">
            <summary>
            Tries the get property.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.ContainsProperty(System.String)">
            <summary>
            Determines whether the specified name contains property.
            </summary>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified name contains property; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.ContainsProperty(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Determines whether the specified name contains property.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns><c>true</c> if the specified name contains property; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.ContainsFlag(System.String)">
            <summary>
            Determines whether the specified name contains flag.
            </summary>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified name contains flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.ContainsFlag(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Determines whether the specified name contains flag.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns><c>true</c> if the specified name contains flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.ToString(System.String)">
            <summary>
            Converts the value of the current <see cref="T:Starcounter.CommandLine.ApplicationArguments"/> 
            to a string representation using the specified format.
            </summary>
            <param name="format">The format to use when formatting.</param>
            <returns>A string representation of the current <see cref="T:Starcounter.CommandLine.ApplicationArguments"/>
            using the specified format.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.GetOptionFromIndex(System.String,Starcounter.CommandLine.Syntax.OptionAttributes,System.Nullable{Starcounter.CommandLine.CommandLineSection})">
            <summary>
            Gets the index of the option from.
            </summary>
            <param name="name">The name.</param>
            <param name="attributes">The attributes.</param>
            <param name="section">The section.</param>
            <returns>GivenOption.</returns>
            <exception cref="T:System.ArgumentNullException">name</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">section</exception>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.TryGetOptionFromIndex(System.String,Starcounter.CommandLine.Syntax.OptionAttributes,System.Nullable{Starcounter.CommandLine.CommandLineSection},Starcounter.CommandLine.GivenOption@)">
            <summary>
            Tries the index of the get option from.
            </summary>
            <param name="name">The name.</param>
            <param name="attributes">The attributes.</param>
            <param name="section">The section.</param>
            <param name="option">The option.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#GlobalOptions">
            <summary>
            Gets the global options.
            </summary>
            <value>The global options.</value>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#CommandOptions">
            <summary>
            Gets the command options.
            </summary>
            <value>The command options.</value>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#CommandParameters">
            <summary>
            Gets the command parameters.
            </summary>
            <value>The command parameters.</value>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#Command">
            <summary>
            Gets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#HasCommand">
            <summary>
            Gets a value indicating whether this instance has command.
            </summary>
            <value><c>true</c> if this instance has command; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#GetProperty(System.String)">
            <summary>
            Gets the property.
            </summary>
            <param name="name">The name.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#GetProperty(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Gets the property.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#ContainsProperty(System.String)">
            <summary>
            Determines whether the specified name contains property.
            </summary>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified name contains property; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#ContainsProperty(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Determines whether the specified name contains property.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns><c>true</c> if the specified name contains property; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#ContainsFlag(System.String)">
            <summary>
            Determines whether the specified name contains flag.
            </summary>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified name contains flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.Starcounter#CommandLine#IApplicationInput#ContainsFlag(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Determines whether the specified name contains flag.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns><c>true</c> if the specified name contains flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.GetInput">
            <summary>
            Gets the input.
            </summary>
            <returns>IApplicationInput.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.GetOptionFromInput(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Gets the option from input.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.ArgumentNullException">name</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">section</exception>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.ApplicationArguments" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.EnforceSyntax(Starcounter.CommandLine.Syntax.IApplicationSyntax)">
            <summary>
            Enforces the syntax.
            </summary>
            <param name="syntax">The syntax.</param>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.EnforceCommandOptionSyntax(Starcounter.CommandLine.Syntax.OptionInfo[],Starcounter.CommandLine.Syntax.OptionAttributes)">
            <summary>
            Enforces the command option syntax.
            </summary>
            <param name="options">The options.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.EnforceGlobalOptionSyntax(Starcounter.CommandLine.Syntax.OptionInfo[],Starcounter.CommandLine.Syntax.OptionAttributes)">
            <summary>
            Enforces the global option syntax.
            </summary>
            <param name="options">The options.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.AddProperty(System.String,System.String,System.Boolean)">
            <summary>
            Adds the property.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="set">Instructs the method to set the option rather
            than adding it. If <c>true</c>, an old value will be overwritten
            if it exist.</param>
            <exception cref="T:System.ArgumentNullException">name</exception>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.AddFlag(System.String,System.Boolean)">
            <summary>
            Adds the flag.
            </summary>
            <param name="name">The name.</param>
            <param name="set">Instructs the method to set the option rather
            than adding it. If <c>true</c>, an old value will be overwritten
            if it exist.</param>
            <exception cref="T:System.ArgumentNullException">name</exception>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.AddParameter(System.String)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">value</exception>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.AddOptionToDictionary(System.String,System.String,System.Boolean)">
            <summary>
            Adds the option to dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="set">Instructs the method to set the option rather
            than adding it. If <c>true</c>, an old value will be overwritten
            if it exist.</param>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.CreateOptionIndex(Starcounter.CommandLine.Syntax.IApplicationSyntax,Starcounter.CommandLine.Syntax.ICommandSyntax)">
            <summary>
            Creates the index of the option.
            </summary>
            <param name="syntax">The syntax.</param>
            <param name="commandSyntax">The command syntax.</param>
            <returns>Dictionary{System.StringGivenOption}.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.ApplicationArguments.RaiseSyntaxErrorException(System.String,System.Object[])">
            <summary>
            Raises the syntax error exception.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="T:Starcounter.CommandLine.CommandLineSection">
            <summary>
            Enum CommandLineSection
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.CommandLineSection.GlobalOptions">
            <summary>
            The global options
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.CommandLineSection.Command">
            <summary>
            The command
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.CommandLineSection.CommandParametersAndOptions">
            <summary>
            The command parameters and options
            </summary>
        </member>
        <member name="T:Starcounter.CommandLine.GivenOption">
            <summary>
            Represents an option specified on the command line.
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.GivenOption.Option">
            <summary>
            Gets or sets the information about the option, in the
            form of an <see cref="T:Starcounter.CommandLine.Syntax.OptionInfo"/> instance.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.GivenOption.SpecifiedName">
            <summary>
            The name by which the option was given.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.GivenOption.Value">
            <summary>
            The options value.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.GivenOption.Section">
            <summary>
            The section in where the option was given.
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.GivenOption.IsFlag">
            <summary>
            Gets a value indicating if the given option represents
            a flag.
            </summary>
            <value><c>true</c> if this instance is a flag; <c>false</c> 
            otherwise.</value>
        </member>
        <member name="M:Starcounter.CommandLine.GivenOption.ToString(System.String)">
            <summary>
            Converts the value of the current <see cref="T:Starcounter.CommandLine.GivenOption"/> 
            to a string representation using the specified format.
            </summary>
            <param name="format">The format to use when formatting.</param>
            <returns>A string representation of the current <see cref="T:Starcounter.CommandLine.GivenOption"/>
            using the specified format.</returns>
        </member>
        <member name="T:Starcounter.CommandLine.IApplicationInput">
            <summary>
            Interface IApplicationInput
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.IApplicationInput.GlobalOptions">
            <summary>
            Gets the global options.
            </summary>
            <value>The global options.</value>
        </member>
        <member name="P:Starcounter.CommandLine.IApplicationInput.CommandOptions">
            <summary>
            Gets the command options.
            </summary>
            <value>The command options.</value>
        </member>
        <member name="P:Starcounter.CommandLine.IApplicationInput.CommandParameters">
            <summary>
            Gets the command parameters.
            </summary>
            <value>The command parameters.</value>
        </member>
        <member name="P:Starcounter.CommandLine.IApplicationInput.Command">
            <summary>
            Gets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Starcounter.CommandLine.IApplicationInput.HasCommand">
            <summary>
            Gets a value indicating whether this instance has command.
            </summary>
            <value><c>true</c> if this instance has command; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Starcounter.CommandLine.IApplicationInput.GetProperty(System.String)">
            <summary>
            Gets the property.
            </summary>
            <param name="name">The name.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.IApplicationInput.GetProperty(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Gets the property.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.IApplicationInput.ContainsProperty(System.String)">
            <summary>
            Determines whether the specified name contains property.
            </summary>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified name contains property; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.IApplicationInput.ContainsProperty(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Determines whether the specified name contains property.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns><c>true</c> if the specified name contains property; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.IApplicationInput.ContainsFlag(System.String)">
            <summary>
            Determines whether the specified name contains flag.
            </summary>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified name contains flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.IApplicationInput.ContainsFlag(System.String,Starcounter.CommandLine.CommandLineSection)">
            <summary>
            Determines whether the specified name contains flag.
            </summary>
            <param name="name">The name.</param>
            <param name="section">The section.</param>
            <returns><c>true</c> if the specified name contains flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Starcounter.CommandLine.Parser">
            <summary>
            Class Parser
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Parser.Additions">
            <summary>
            Set of additions, applied to the parser after it has
            been created but before actually parsed.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Parser.Arguments">
            <summary>
            The array of arguments the parser parses.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Parser.OptionPrefixes">
            <summary>
            Known option prefixes.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Parser.StandardOptionPrefix">
            <summary>
            Gets the standard option prefix.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Parser.OptionSuffixes">
            <summary>
            Known option suffixes.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Parser.StandardOptionSuffix">
            <summary>
            Gets the standard option suffix.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Parser.FlagKeyword">
            <summary>
            Keyword used to distinguish a flag from a property.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.#ctor">
            <summary>
            Initializes a <see cref="T:Starcounter.CommandLine.Parser" /> using the arguments
            returned from <see cref="M:System.Environment.GetCommandLineArgs" />.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.#ctor(System.String[])">
            <summary>
            Initializes a <see cref="T:Starcounter.CommandLine.Parser" /> by specifying the
            arguments to be parsed.
            </summary>
            <param name="args">The args.</param>
            <exception cref="T:System.ArgumentNullException">args</exception>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.Apply(System.String[])">
            <summary>
            Applies a set of arguments on top of the arguments given
            when the parser was created.
            </summary>
            <remarks>
            <para>
            All arguments applied with this method will be applied on
            top of the already parsed original arguments, replacing any
            previous occurance if exist, and adding if not.
            </para>
            <para>
            Arguments are applied on a first-in-first-applied basis,
            meaning that the any call (n) to this method will be
            overwritten by subsequent call(s) (n+1).
            </para>
            </remarks>
            <param name="args">Set of arguments to apply.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.Parse(Starcounter.CommandLine.Syntax.IApplicationSyntax)">
            <summary>
            Parses the specified syntax.
            </summary>
            <param name="syntax">The syntax.</param>
            <returns>ApplicationArguments.</returns>
            <exception cref="T:System.ArgumentNullException">syntax</exception>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.InternalParse(Starcounter.CommandLine.Syntax.IApplicationSyntax)">
            <summary>
            Internals the parse.
            </summary>
            <param name="syntax">The syntax.</param>
            <returns>ApplicationArguments.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.StartsWithOptionPrefix(System.String)">
            <summary>
            Returns true if the given value, after leading and trailing spaces
            have been removed, starts with an option prefix, meaning the user
            has provided an option and a value with no spaces in between, like
            "-myOption:MyValue".
            </summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.IsOptionFlag(System.String)">
            <summary>
            Determines whether [is option flag] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if [is option flag] [the specified value]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.ParseOptionString(System.String,System.Int32,System.String@,System.String@,Starcounter.CommandLine.Syntax.OptionAttributes@)">
            <summary>
            Parses the option string.
            </summary>
            <param name="value">The value.</param>
            <param name="argumentIndex">The index in the args[] array we are currently parsing.</param>
            <param name="optionName">Name of the option.</param>
            <param name="optionValue">The option value.</param>
            <param name="attributes">Attributes that applies to the given option,
            if such could be derived from looking at the specification itself.
            </param>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.RaiseSyntaxErrorException(System.UInt32,System.Int32,System.String,System.Object[])">
            <summary>
            Raises the syntax error exception.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="argument">The argument.</param>
            <param name="message">The message.</param>
            <param name="messageParameters">The message parameters.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Parser.RaiseOptionWithNoValueException(System.String,System.Int32)">
            <summary>
            Raises the option with no value exception.
            </summary>
            <param name="specifiedOption">The specified option.</param>
            <param name="illegalArgument">The illegal argument.</param>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition">
            <summary>
            Class ApplicationSyntaxDefinition
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.commands">
            <summary>
            The commands
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.ProgramDescription">
            <summary>
            Gets or sets the program description.
            </summary>
            <value>The program description.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.RequiresCommand">
            <summary>
            Gets or sets a value indicating whether [requires command].
            </summary>
            <value><c>true</c> if [requires command]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.DefaultCommand">
            <summary>
            Gets or sets the default command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.DefineCommand(System.String,System.String)">
            <summary>
            Defines the command.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <returns>CommandSyntaxDefinition.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.DefineCommand(System.String,System.String,System.Int32)">
            <summary>
            Defines the command.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="parameterCount">The parameter count.</param>
            <returns>CommandSyntaxDefinition.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.DefineCommand(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Defines the command.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="minParameterCount">The min parameter count.</param>
            <param name="maxParameterCount">The max parameter count.</param>
            <returns>CommandSyntaxDefinition.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.InternalDefineCommand(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Internals the define command.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="minParameterCount">The min parameter count.</param>
            <param name="maxParameterCount">The max parameter count.</param>
            <returns>CommandSyntaxDefinition.</returns>
            <exception cref="T:System.ArgumentNullException">name</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.CreateSyntax">
            <summary>
            Creates the syntax.
            </summary>
            <returns>IApplicationSyntax.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.VerifyConsistency">
            <summary>
            Verifies the consistency.
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.Starcounter#CommandLine#Syntax#IApplicationSyntax#RequiresCommand">
            <summary>
            Gets a value indicating whether [requires command].
            </summary>
            <value><c>true</c> if [requires command]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.Starcounter#CommandLine#Syntax#IApplicationSyntax#ProgramDescription">
            <summary>
            Gets the program description.
            </summary>
            <value>The program description.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.Starcounter#CommandLine#Syntax#IApplicationSyntax#Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.Starcounter#CommandLine#Syntax#IApplicationSyntax#Flags">
            <summary>
            Gets the flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.Starcounter#CommandLine#Syntax#IApplicationSyntax#Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.ApplicationSyntaxDefinition.RaiseInconsistentSyntaxException(System.String,System.Object[])">
            <summary>
            Raises the inconsistent syntax exception.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition">
            <summary>
            Class CommandSyntaxDefinition
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.MinParameterCount">
            <summary>
            Gets or sets the min parameter count.
            </summary>
            <value>The min parameter count.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.MaxParameterCount">
            <summary>
            Gets or sets the max parameter count.
            </summary>
            <value>The max parameter count.</value>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Starcounter#CommandLine#Syntax#ICommandSyntax#Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Starcounter#CommandLine#Syntax#ICommandSyntax#CommandDescription">
            <summary>
            Gets the command description.
            </summary>
            <value>The command description.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Starcounter#CommandLine#Syntax#ICommandSyntax#MinParameterCount">
            <summary>
            Gets the min parameter count.
            </summary>
            <value>The min parameter count.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Starcounter#CommandLine#Syntax#ICommandSyntax#MaxParameterCount">
            <summary>
            Gets the max parameter count.
            </summary>
            <value>The max parameter count.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Starcounter#CommandLine#Syntax#ICommandSyntax#Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.CommandSyntaxDefinition.Starcounter#CommandLine#Syntax#ICommandSyntax#Flags">
            <summary>
            Gets the flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.FlagDefinition">
            <summary>
            Defines a flag.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.FlagDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.Syntax.FlagDefinition" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.IApplicationSyntax">
            <summary>
            Interface IApplicationSyntax
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.IApplicationSyntax.RequiresCommand">
            <summary>
            Gets a value indicating whether [requires command].
            </summary>
            <value><c>true</c> if [requires command]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.IApplicationSyntax.DefaultCommand">
            <summary>
            Gets the default command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.IApplicationSyntax.ProgramDescription">
            <summary>
            Gets the program description.
            </summary>
            <value>The program description.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.IApplicationSyntax.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.IApplicationSyntax.Flags">
            <summary>
            Gets the flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.IApplicationSyntax.Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.ICommandSyntax">
            <summary>
            Interface ICommandSyntax
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ICommandSyntax.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ICommandSyntax.CommandDescription">
            <summary>
            Gets the command description.
            </summary>
            <value>The command description.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ICommandSyntax.MinParameterCount">
            <summary>
            Gets the min parameter count.
            </summary>
            <value>The min parameter count.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ICommandSyntax.MaxParameterCount">
            <summary>
            Gets the max parameter count.
            </summary>
            <value>The max parameter count.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ICommandSyntax.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.ICommandSyntax.Flags">
            <summary>
            Gets the flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.OptionAttributes">
            <summary>
            Defines a set of constant flags that can be use to attribute
            an option.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.OptionAttributes.Default">
            <summary>
            Specifies the default option attributes are to be used.
            </summary>
            <remarks>
            The default is a property that is not required and can
            only appear once.
            </remarks>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.OptionAttributes.Required">
            <summary>
            Specifies the option to which the current attribute
            applies is required.
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.OptionAttributes.Flag">
            <summary>
            Specifies the option to which the current attribute
            applies is a flag, and hence no value can be expected.
            </summary>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.OptionDefinition">
            <summary>
            Class OptionDefinition
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionDefinition.Name">
            <summary>
            The standard name of the option being defined.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionDefinition.Description">
            <summary>
            The description of the option being defined.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionDefinition.AlternativeNames">
            <summary>
            Alternative names of the option being defined.
            </summary>
            <value>The alternative names.</value>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.OptionDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.Syntax.OptionDefinition" /> class.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">name</exception>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.OptionInfo">
            <summary>
            Class OptionInfo
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionInfo.AlternativeNames">
            <summary>
            Gets or sets the alternative names.
            </summary>
            <value>The alternative names.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionInfo.AllNames">
            <summary>
            Gets an array including all the names of the current
            option, starting with the default name.
            </summary>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionInfo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Starcounter.CommandLine.Syntax.OptionInfo.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.OptionInfo.HasName(System.String)">
            <summary>
            Determines whether the specified name has name.
            </summary>
            <param name="name">The name.</param>
            <returns><c>true</c> if the specified name has name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.OptionInfo.HasName(System.String,System.StringComparison)">
            <summary>
            Determines whether the specified name has name.
            </summary>
            <param name="name">The name.</param>
            <param name="comparisonMethod">The comparison method.</param>
            <returns><c>true</c> if the specified name has name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.PropertyDefinition">
            <summary>
            Defines a property.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.PropertyDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.Syntax.PropertyDefinition" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="T:Starcounter.CommandLine.Syntax.SyntaxDefinition">
            <summary>
            Class SyntaxDefinition
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.SyntaxDefinition.Properties">
            <summary>
            The properties
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.SyntaxDefinition.Flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:Starcounter.CommandLine.Syntax.SyntaxDefinition.EmptyStringArray">
            <summary>
            The empty string array
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.CommandLine.Syntax.SyntaxDefinition" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineFlag(System.String,System.String)">
            <summary>
            Defines the flag.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineFlag(Starcounter.CommandLine.Syntax.FlagDefinition)">
            <summary>
            Defines the flag.
            </summary>
            <param name="definition">The definition.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineFlag(Starcounter.CommandLine.Syntax.FlagDefinition,Starcounter.CommandLine.Syntax.OptionAttributes)">
            <summary>
            Defines the flag.
            </summary>
            <param name="definition">The definition.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineFlag(System.String,System.String,Starcounter.CommandLine.Syntax.OptionAttributes,System.String[])">
            <summary>
            Defines the flag.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="attributes">The attributes.</param>
            <param name="alternativeNames">The alternative names.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineProperty(System.String,System.String)">
            <summary>
            Defines the property.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineProperty(Starcounter.CommandLine.Syntax.PropertyDefinition)">
            <summary>
            Defines the property.
            </summary>
            <param name="definition">The definition.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineProperty(Starcounter.CommandLine.Syntax.PropertyDefinition,Starcounter.CommandLine.Syntax.OptionAttributes)">
            <summary>
            Defines the property.
            </summary>
            <param name="definition">The definition.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineProperty(System.String,System.String,Starcounter.CommandLine.Syntax.OptionAttributes,System.String[])">
            <summary>
            Defines the property.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="attributes">The attributes.</param>
            <param name="alternativeNames">The alternative names.</param>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.CreateOptionSet(System.Collections.Generic.Dictionary{System.String,Starcounter.CommandLine.Syntax.OptionInfo})">
            <summary>
            Creates the option set.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>OptionInfo[][].</returns>
        </member>
        <member name="M:Starcounter.CommandLine.Syntax.SyntaxDefinition.DefineOption(System.String,System.String,Starcounter.CommandLine.Syntax.OptionAttributes,System.String[])">
            <summary>
            Defines the option.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="attributes">The attributes.</param>
            <param name="alternativeNames">The alternative names.</param>
            <exception cref="T:System.ArgumentNullException">name</exception>
        </member>
        <member name="T:Starcounter.Advanced.FileServerConfiguration">
            <summary>
            Configuration parameters for the static file server
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Starcounter.Advanced.FileServerConfiguration.DisableAllCaching" -->
        <member name="T:Starcounter.Advanced.BlendingInfoOnStartup">
            <summary>
            Blending information that is parsed and applied
            during application startup.
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.BlendingInfoAndConverter">
            <summary>
            Contains blending and attached converter.
            </summary>
        </member>
        <member name="F:Starcounter.Advanced.BlendingInfoAndConverter.MasterBlending">
            <summary>
            Master blending with from converter and so on.
            </summary>
        </member>
        <member name="F:Starcounter.Advanced.BlendingInfoAndConverter.SlaveBlending">
            <summary>
            Corresponding to master slave blending.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfoAndConverter.AttachedFromUriConverter">
            <summary>
            Returning attached from URI converter.
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.BlendingInfoAndConverter.IsMasterBlendingActive">
            <summary>
            Master blending can be inactive by several means.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Starcounter.Advanced.BlendingsForUri">
            <summary>
            Contains a list of blendings for a given URI.
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.HandlerBlendings">
            <summary>
            Contains all blendings candidates for a given handler.
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.BlendingInfo">
            <summary>
            Blending structure.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.HasHandlerParams">
            <summary>
            Indicates if this handler has parameters.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.IsActive">
            <summary>
            Shows if this blending rule is active.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.IsInitiallyActive">
            <summary>
            Shows if this blending rule was initially active.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.IsFromBlendJson">
            <summary>
            Shows if this blending rule is coming from `blend.json` file.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.IsHandlerActive">
            <summary>
            Shows if corresponding blending handler is active.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.IsSpecificUri">
            <summary>
            Is it a specific URI blended, not a handler.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.Token">
            <summary>
            Returns blending token.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.Uri">
            <summary>
            Returns mapping URI that user called MapUri with (can be mixed, handler or specific).
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.SpecificUri">
            <summary>
            Returns blended specific URI.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.HandlerUri">
            <summary>
            Returns handler URI.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.AppName">
            <summary>
            Returns the application name to which the
            blended handler belongs.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.IsFromUriConverterOn">
            <summary>
            Returns True if the "FromUriConverter" is set/allowed.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.IsToUriConverterOn">
            <summary>
            Returns True if the "ToUriConverter" is set/allowed.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.Contexts">
            <summary>
            Returns contexts.
            </summary>
        </member>
        <member name="P:Starcounter.Advanced.BlendingInfo.ContextsAsString">
            <summary>
            Returns contexts combined as a string.
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.IBindable">
            <summary>
            Used to provide a way to store a reference to a bindable object using a 64 bit integer.
            The database object class Entity implements this interface such that Puppet objects 
            (view model objects mirrored to external clients) can be bound to database objects.
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.IRestServer">
            <summary>
            To serve Web pages and App state, you can implement a REST handler. A REST handler can process a Method on a
            resource located using a URI.
            </summary>
            <remarks>The most commonly known use of Representational state transfer (REST) is the world wide web (WWW)
            that uses the HTTP protocol (the most commonly used REST protocol). The most commonly used REST Methods
            are GET and POST, often used by web browser to get REST resources in the HTML format.
            The term REST was introduced by Roy Fielding, one of the authors of the original HTTP protocol.</remarks>
        </member>
        <member name="M:Starcounter.Advanced.IRestServer.UserAddedLocalFileDirectoryWithStaticContent(System.String,System.UInt16,System.String)">
            <summary>
            The starcounter .EXE modules will provide a path where static file resources such as .html files or images
            are kept. This allows the web server to serve content from all modules without having to copy or deploy files to
            a single location.
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IRestServer.GetWorkingDirectories(System.UInt16)">
            <summary>
            Get a list with all folders where static file resources such as .html files or images are kept.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Advanced.IRestServer.Housekeep">
            <summary>
            Housekeeps this instance.
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.IREST">
            <summary>
            Handlers registrations of user code handlers (delegates) of REST style requests.
            Usually, the developer uses the global static functions (GET/POST/etc.)
            in the StarcounterBase class rather.
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterWsHandler(System.UInt16,System.String,System.Action{System.Byte[],Starcounter.WebSocket})">
            <summary>
            Registers a handler for a WebSocket.
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterWsHandler(System.UInt16,System.String,System.Action{System.String,Starcounter.WebSocket})">
            <summary>
            Registers a handler for a WebSocket.
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterWsDisconnectHandler(System.UInt16,System.String,System.Action{Starcounter.WebSocket})">
            <summary>
            Registers a disconnect handler for a WebSocket.
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterHandler(System.UInt16,System.String,System.Func{Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Registers a handler with no parameters
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterHandler``1(System.UInt16,System.String,System.Func{``0,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Registers a handler with one parameter
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterHandler``2(System.UInt16,System.String,System.Func{``0,``1,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Registers a handler with two parameters
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterHandler``3(System.UInt16,System.String,System.Func{``0,``1,``2,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Registers a handler with three parameters
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterHandler``4(System.UInt16,System.String,System.Func{``0,``1,``2,``3,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Registers a handler with four parameters
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.RegisterHandler``5(System.UInt16,System.String,System.Func{``0,``1,``2,``3,``4,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Registers a handler with five parameters
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.IREST.UnregisterHttpHandler(System.UInt16,System.String,System.String)">
            <summary>
            Unregisters a HTTP handler.
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.StarcounterBase">
            <summary>
            This class does not define any instance properties or behaviour. It just makes
            available the global static functions SQL, Transaction and communication handler functions
            GET,POST, etc. in various Starcounter classes for convenience.
            </summary>
        </member>
        <member name="F:Starcounter.Advanced.StarcounterBase._DB">
            <summary>
            Inject database function provider here
            </summary>
        </member>
        <member name="F:Starcounter.Advanced.StarcounterBase.Fileserver">
            <summary>
            
            </summary>
        </member>
        <member name="F:Starcounter.Advanced.StarcounterBase.TransactionManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Starcounter.Advanced.StarcounterBase.SQL(System.String,System.Object[])">
            <summary>
            Executes a query on the embedding database.
            </summary>
            <param name="query">The SQL query string excluding parameters. Parameters are supplied as ? marks.</param>
            <param name="args">The parameters corresponding to the ? marks in the query string.</param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Advanced.StarcounterBase.SQL``1(System.String,System.Object[])">
            <summary>
            Executes a query on the embedding database.
            </summary>
            <typeparam name="T">The class of each entity in the result."/></typeparam>
            <param name="query">The SQL query string excluding parameters. Parameters are supplied as ? marks.</param>
            <param name="args">The parameters corresponding to the ? marks in the query string.</param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Advanced.StarcounterBase.SlowSQL(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Advanced.StarcounterBase.SlowSQL``1(System.String,System.Object[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="str"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="P:Starcounter.Advanced.StarcounterBase.REST">
            <summary>
            
            </summary>
        </member>
        <member name="T:Starcounter.Advanced.UnsupportedMimeTypeException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Starcounter.Handle">
            <summary>
            Allows you to register communication endpoints such as REST style handlers
            (GET/POST/PUT/DELETE/PATCH etc.)
            </summary>
            <remarks>
            Allows endpoints to be registered that corresponds to methods and URIs (paths
            with optional parameters). Even though REST handlers are typically associated with http, they 
            can also be implemented in protocols such as HTTP1.1, SPDY, HTTP2.0 (DRAFT),
            WebSockets and other means of communication. As long as their endpoints are defined as methods
            (verbs such as GET) and URI templates (i.e. /news/sports/{?}).
            </remarks>
        </member>
        <member name="M:Starcounter.Handle.Tcp(System.UInt16,System.Action{Starcounter.TcpSocket,System.Byte[]})">
            <summary>
            TCP socket data receive event handler.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.Udp(System.UInt16,System.Action{System.Net.IPAddress,System.UInt16,System.Byte[]})">
            <summary>
            UDP socket data receive event handler.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.WebSocket(System.UInt16,System.String,System.Action{System.Byte[],Starcounter.WebSocket})">
            <summary>
            WebSocket data receive event handler.
            </summary>
            <param name="port"></param>
            <param name="groupName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Starcounter.Handle.WebSocket(System.UInt16,System.String,System.Action{System.String,Starcounter.WebSocket})">
            <summary>
            WebSocket data receive event handler.
            </summary>
            <param name="port"></param>
            <param name="groupName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Starcounter.Handle.WebSocketDisconnect(System.UInt16,System.String,System.Action{Starcounter.WebSocket})">
            <summary>
            Handler on WebSocket disconnect event.
            </summary>
            <param name="port"></param>
            <param name="groupName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Starcounter.Handle.WebSocket(System.String,System.Action{System.Byte[],Starcounter.WebSocket})">
            <summary>
            Socket data receive event handler.
            </summary>
            <param name="groupName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Starcounter.Handle.WebSocket(System.String,System.Action{System.String,Starcounter.WebSocket})">
            <summary>
            Socket receive event handler.
            </summary>
            <param name="groupName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Starcounter.Handle.WebSocketDisconnect(System.String,System.Action{Starcounter.WebSocket})">
            <summary>
            Handler on socket disconnect event.
            </summary>
            <param name="groupName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Starcounter.Handle.GET(System.String,System.Func{Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Register a uriTemplate template (e.g. <c>/mypath</c>) to catch an
            incoming GET request on the default port.
            </summary>
            <example>  
            This sample shows how to return the string "Hello World" when
            a request for <c>/demo</c> is received using the GET method.
            <code> 
            class TestClass  { 
               static void Main() { 
                  Handle.GET("/demo", () => {
                     return "Hello World";    
                  }); 
               } 
            } 
            </code> 
            </example>
            <remarks>
            The default port is read from the  see cref="Handle.Config.DefaultPort" / > property.
            </remarks>
            <param name="uriTemplate">The uriTemplate template to register.</param>
            <param name="code">The code to execute when a request is received.</param>
        </member>
        <member name="M:Starcounter.Handle.GET(System.UInt16,System.String,System.Func{Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Register a uriTemplate template (e.g. <c>/mypath</c>) to catch an
            incoming GET request on a specific port.
            </summary>
            <example>  
            This sample shows how to return the string "Hello World" when
            a request for <c>/demo</c> is received using the GET method on
            port 80.
            <code> 
            class TestClass  { 
               static void Main() { 
                  Handle.GET(80, "/demo", () => {
                     return "Hello World";    
                  }); 
               } 
            } 
            </code> 
            </example>
            <param name="uriTemplate">The uriTemplate template to register.</param>
            <param name="code">The code to execute when a request is received.</param>
            <param name="port">The port number to listen to.</param>
        </member>
        <member name="M:Starcounter.Handle.GET``1(System.String,System.Func{``0,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            Register a uriTemplate template with a dynamic parameter 
            (e.g. <c>/things/{?}</c>) to catch an
            incoming GET request on the default port.
            </summary>
            <remarks>
            The parameter can be of any of the following types:
            <list type="table">
                <listheader>
                    <term>int</term>
                    <description>/example/123</description>
                </listheader>
                <item>
                    <term>long</term>
                    <description>/example/123</description>
                </item>
            </list>
            </remarks>
            <example>  
            This sample shows how to return a minimalistic web page when
            a request for <c>/persons/somename</c> is received using the GET method.
            <code> 
            class TestClass  { 
               static void Main() { 
                  Handle.GET("/persons/{?}", (string name) => {
                     return "<![CDATA[ <!DOCTYPE html><title>The web page of " + name + "</title>]]>";
                  }); 
               } 
            } 
            </code> 
            </example>
            <remarks>
            The default port is read from the see cref="Handle.Config.DefaultPort" / > property.
            </remarks>
            <typeparam name="T">The type of the parameter.</typeparam>
            <param name="uriTemplate">The uriTemplate template to register.</param>
            <param name="code">The code to execute when a request is received.</param>
        </member>
        <member name="M:Starcounter.Handle.GET``1(System.UInt16,System.String,System.Func{``0,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            </summary>
            <typeparam name="T">The type of the parameter.</typeparam>
            <param name="uriTemplate">The uriTemplate template to register.</param>
            <param name="code">The code to execute when a request is received.</param>
            <param name="port">The port number to listen to.</param>
        </member>
        <member name="M:Starcounter.Handle.GET``2(System.String,System.Func{``0,``1,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            </summary>
            <typeparam name="T1">The type of the first parameter.</typeparam>
            <typeparam name="T2">The type of the second parameter.</typeparam>
            <param name="uriTemplate">The uriTemplate template to register.</param>
            <param name="code">The code to execute when a request is received.</param>
        </member>
        <member name="M:Starcounter.Handle.GET``2(System.UInt16,System.String,System.Func{``0,``1,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="port"></param>
            <param name="uriTemplate"></param>
            <param name="code"></param>
        </member>
        <member name="M:Starcounter.Handle.GET``3(System.String,System.Func{``0,``1,``2,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="uriTemplate"></param>
            <param name="code"></param>
        </member>
        <member name="M:Starcounter.Handle.GET``3(System.UInt16,System.String,System.Func{``0,``1,``2,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="port"></param>
            <param name="uriTemplate"></param>
            <param name="code"></param>
        </member>
        <member name="M:Starcounter.Handle.GET``4(System.String,System.Func{``0,``1,``2,``3,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            </summary>
            <typeparam name="T1">The type of the first parameter.</typeparam>
            <typeparam name="T2">The type of the second parameter.</typeparam>
            <typeparam name="T3">The type of the third parameter.</typeparam>
            <typeparam name="T4">The type of the fourth parameter.</typeparam>
            <param name="uriTemplate"></param>
            <param name="code"></param>
        </member>
        <member name="M:Starcounter.Handle.GET``4(System.UInt16,System.String,System.Func{``0,``1,``2,``3,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="port"></param>
            <param name="uriTemplate"></param>
            <param name="code"></param>
        </member>
        <member name="M:Starcounter.Handle.GET``5(System.String,System.Func{``0,``1,``2,``3,``4,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            </summary>
            <typeparam name="T1">The type of the first parameter.</typeparam>
            <typeparam name="T2">The type of the second parameter.</typeparam>
            <typeparam name="T3">The type of the third parameter.</typeparam>
            <typeparam name="T4">The type of the fourth parameter.</typeparam>
            <typeparam name="T5">The type of the fifth parameter.</typeparam>
            <param name="uriTemplate"></param>
            <param name="code"></param>
        </member>
        <member name="M:Starcounter.Handle.GET``5(System.UInt16,System.String,System.Func{``0,``1,``2,``3,``4,Starcounter.Response},Starcounter.HandlerOptions)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <param name="port"></param>
            <param name="uriTemplate"></param>
            <param name="code"></param>
        </member>
        <member name="M:Starcounter.Handle.IsLocalIpAddress(System.String)">
            <summary>
            Checks if IP address is local.
            </summary>
            <param name="host">IP or DNS name.</param>
            <returns>True if local address.</returns>
        </member>
        <member name="F:Starcounter.Handle.incomingRequest_">
            <summary>
            Incoming request reference.
            </summary>
        </member>
        <member name="P:Starcounter.Handle.IncomingRequest">
            <summary>
            Incoming external request.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.outgoingCookies_">
            <summary>
            Outgoing cookies.
            </summary>
        </member>
        <member name="P:Starcounter.Handle.OutgoingCookies">
            <summary>
            Outgoing HTTP cookies list.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.AddOutgoingCookie(System.String,System.String)">
            <summary>
            Adding cookie to outgoing HTTP response.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.outgoingHeaders_">
            <summary>
            Outgoing HTTP headers.
            </summary>
        </member>
        <member name="P:Starcounter.Handle.OutgoingHeaders">
            <summary>
            Outgoing HTTP headers list.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.AddOutgoingHeader(System.String,System.String)">
            <summary>
            Adding HTTP header to outgoing response.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.outgoingStatusDescription_">
            <summary>
            Outgoing HTTP status description.
            </summary>
        </member>
        <member name="P:Starcounter.Handle.OutgoingStatusDescription">
            <summary>
            Outgoing HTTP status code.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.SetOutgoingStatusDescription(System.String)">
            <summary>
            Setting status description for outgoing HTTP response.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.outgoingStatusCode_">
            <summary>
            Outgoing HTTP status code.
            </summary>
        </member>
        <member name="P:Starcounter.Handle.OutgoingStatusCode">
            <summary>
            Outgoing HTTP status code.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.SetOutgoingStatusCode(System.UInt16)">
            <summary>
            Setting status code for outgoing HTTP response.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.callLevel_">
            <summary>
            Incoming request reference.
            </summary>
        </member>
        <member name="P:Starcounter.Handle.CallLevel">
            <summary>
            Incoming external request.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.ResetAllOutgoingFields">
            <summary>
            Resetting all outgoing fields for new request.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.resolveStaticResource_">
            <summary>
            Resolves static resource with given URI and incoming request object.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.ResolveStaticResource(System.String,Starcounter.Request)">
            <summary>
            Resolves static resource with given URI and incoming request object.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.ResolveStaticResource(Starcounter.Request)">
            <summary>
            Resolves static resource with given URI and incoming request object.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.IsHandlerRegistered(System.String,Starcounter.HandlerOptions)">
            <summary>
            Checks if given URI handler is registered.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.IsHandlerRegistered(System.String,System.String)">
            <summary>
            Checks if given URI handler is registered.
            </summary>
            <param name="httpMethod">HTTP method: "GET", "POST", "DELETE", etc.</param>
            <param name="handlerUri">Handler URI, for example, "/myhandler/{?}"</param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Handle.GetRegisteredHandlers(System.UInt16)">
            <summary>
            Gets an array of registered handlers for given port number.
            </summary>
            <param name="portNumber">Given port number.</param>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Handle.GetHandlerForUri(System.String,System.String,System.UInt16)">
            <summary>
            Gets a handler URI from given URI.
            </summary>
            <param name="method">HTTP method for the given URI. For example: GET, POST, etc.</param>
            <param name="uri">HTTP URI itself. For example: "/people/person/12345", "/images/image-id/123ab12asd1", etc.</param>
            <param name="portNumber">Port number.</param>
            <returns></returns>
        </member>
        <member name="F:Starcounter.Handle.requestFilters_">
            <summary>
            Filtering request.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.savedRequestFilters_">
            <summary>
            Saved request filters list.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.AddFilterToMiddleware(System.Func{Starcounter.Request,Starcounter.Response})">
            <summary>
            Adding new filter to request filters.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.AddRequestFilter(System.Func{Starcounter.Request,Starcounter.Response})">
            <summary>
            Adding new request filter.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.RunRequestFilters(Starcounter.Request)">
            <summary>
            Runs all request filters until one that returns non-null response.
            </summary>
            <returns>Filtered response or null.</returns>
        </member>
        <member name="F:Starcounter.Handle.outgoingFilters_">
            <summary>
            Outgoing response filter.
            </summary>
        </member>
        <member name="F:Starcounter.Handle.savedOutgoingFilters_">
            <summary>
            Saved outgoing filters list.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.EnableDisableResponseFilter(System.Boolean)">
            <summary>
            Enable/Disable response filters.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.AddResponseFilter(System.Func{Starcounter.Request,Starcounter.Response,Starcounter.Response})">
            <summary>
            Adding new response filter.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.RunResponseFilters(Starcounter.Request,Starcounter.Response)">
            <summary>
            Runs all added response filters until one that returns non-null response.
            </summary>
            <returns>Filtered response or null.</returns>
        </member>
        <member name="F:Starcounter.Handle.UriParameterIndicator">
            <summary>
            Indicator of parameter in URI.
            </summary>
        </member>
        <member name="F:Starcounter.Handle._REST">
            <summary>
            Inject REST handler function provider here
            </summary>
        </member>
        <member name="M:Starcounter.Handle.UnregisterHttpHandler(System.UInt16,System.String,System.String)">
            <summary>
            Unregisters an existing HTTP handler.
            </summary>
        </member>
        <member name="M:Starcounter.Handle.UnregisterHttpHandler(System.String,System.String)">
            <summary>
            Unregisters an existing HTTP handler.
            </summary>
        </member>
        <member name="T:Starcounter.HandlerOptions">
            <summary>
            Special handler options.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerOptions.InvalidUriHandlerId">
            <summary>
            Invalid URI handler id.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.SkipMiddlewareFilters">
            <summary>
            Skip request filters flag.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.ReplaceExistingHandler">
            <summary>
            Replace existing registered handler.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.SkipRequestFilters">
            <summary>
            Skip request filters flag.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.SkipResponseFilters">
            <summary>
            Skip response filters flag.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.CallingAppName">
            <summary>
            Calling application name.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.SkipHandlersPolicy">
            <summary>
            Forcing skipping policy handler flag.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.SubstituteHandler">
            <summary>
            Substitute handler.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.CallExternalOnly">
            <summary>
            Flag that allows only external calls.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.SelfOnly">
            <summary>
            Flag that allows only internal codehost calls to this handler.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.ParametersInfo">
            <summary>
            Parameters info.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerOptions.handlerId_">
            <summary>
            Specific handler id.
            </summary>
        </member>
        <member name="P:Starcounter.HandlerOptions.HandlerId">
            <summary>
            Specific handler id.
            </summary>
        </member>
        <member name="M:Starcounter.HandlerOptions.#ctor">
            <summary>
            Constructor without handler level.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerOptions.StaticFileHandler">
            <summary>
            Static file handler.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerOptions.AlreadyBlending">
            <summary>
            Indicates that we already blending.
            </summary>
        </member>
        <member name="M:Starcounter.HandlerOptions.GetCopy">
            <summary>
            Creating handler options copy.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Starcounter.RequestFilter">
            <summary>
            Represents a request filter that is called for external
            requests before the actual user handler.
            </summary>
        </member>
        <member name="P:Starcounter.RequestFilter.AppName">
            <summary>
            Application name that registered this handler.
            </summary>
        </member>
        <member name="P:Starcounter.RequestFilter.Filter">
            <summary>
            The actual filter delegate.
            </summary>
        </member>
        <member name="M:Starcounter.RequestFilter.#ctor(System.Func{Starcounter.Request,Starcounter.Response})">
            <summary>
            Constructor.
            </summary>
            <param name="filterRequest">Filter request parameter.</param>
        </member>
        <member name="T:Starcounter.OutgoingFilter">
            <summary>
            Represents an outgoing response filter.
            </summary>
        </member>
        <member name="P:Starcounter.OutgoingFilter.AppName">
            <summary>
            Application name that registered this handler.
            </summary>
        </member>
        <member name="P:Starcounter.OutgoingFilter.Filter">
            <summary>
            The actual filter delegate.
            </summary>
        </member>
        <member name="M:Starcounter.OutgoingFilter.#ctor(System.Func{Starcounter.Request,Starcounter.Response,Starcounter.Response})">
            <summary>
            Constructor.
            </summary>
            <param name="filterRequest">Outgoing response parameter.</param>
        </member>
        <member name="M:Starcounter.IRowEnumerator`1.GetOffsetKey">
            <summary>
            Gets offset key of the SQL enumerator if it is possible.
            </summary>
        </member>
        <member name="T:Starcounter.HookCategory">
            <summary>
            Define categories of hooks, sharing common characteristics.
            </summary>
        </member>
        <member name="F:Starcounter.HookCategory.BeforeDelete">
            <summary>
            Hook invoked when an instance is deleted.
            </summary>
        </member>
        <member name="F:Starcounter.HookCategory.Commit">
            <summary>
            Hooks invoked during commit of a transaction.
            </summary>
        </member>
        <member name="F:Starcounter.HookCategory.AfterCommit">
            <summary>
            Hooks invoked after a transaction has been committed.
            </summary>
        </member>
        <member name="F:Starcounter.HookCategory.None">
            <summary>
            Mask with none of hooks applied.
            </summary>
        </member>
        <member name="F:Starcounter.HookCategory.All">
            <summary>
            Mask with all categories applied.
            </summary>
        </member>
        <member name="T:Starcounter.Ioc.IServiceContainer">
            <summary>
            Defines a service simple service container supporting instances to
            be registered as services, or registering of factory methods,
            providing service implemenetations on demand.
            </summary>
        </member>
        <member name="M:Starcounter.Ioc.IServiceContainer.Register``1(``0)">
            <summary>
            Register a single instance service.
            </summary>
            <typeparam name="T">Service interface.</typeparam>
            <param name="instance">Implementation of that service.</param>
        </member>
        <member name="M:Starcounter.Ioc.IServiceContainer.Register``1(System.Func{Starcounter.Ioc.ServiceContainer,``0})">
            <summary>
            Register a service using a delegate, invoked to instantiate
            the service. The strategy when this is invoked is implementation
            specific.
            </summary>
            <typeparam name="T">Service interface.</typeparam>
            <param name="factory">Factory providing service instances.</param>
        </member>
        <member name="T:Starcounter.Ioc.IServices">
            <summary>
            Defines simplest possible interface of a service container
            retreival provider, allowing installed services to be got.
            </summary>
        </member>
        <member name="T:Starcounter.Ioc.ServiceContainer">
            <summary>
            Simple service container allowing services to be installed and
            later retreived using <see cref="T:Starcounter.Ioc.IServices"/>.
            </summary>
            <remarks>
            This service container employs a strategy where it allows services
            to be registered either as instances, or as delegates providing
            instances (to support an implementation to be created in a lazy
            fashion). It implements a latest-win strategy; installing services
            already installed does not fail, nor use any chainin, instead the
            latest installed service takes precedance.
            </remarks>
        </member>
        <member name="M:Starcounter.Ioc.ServiceContainer.Register``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:Starcounter.Ioc.ServiceContainer.Register``1(System.Func{Starcounter.Ioc.ServiceContainer,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Starcounter.Ioc.ServiceContainer.Get``1">
            <inheritdoc/>
        </member>
        <member name="F:Starcounter.ResponseProcTask.resp_">
            <summary>
            Response object.
            </summary>
        </member>
        <member name="F:Starcounter.ResponseProcTask.receiveProc_">
            <summary>
            User delegate.
            </summary>
        </member>
        <member name="M:Starcounter.ResponseProcTask.#ctor(Starcounter.Response,System.Action{Starcounter.Response})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Starcounter.ResponseProcTask.CallResponseProc">
            <summary>
            Calling the prosedure.
            </summary>
        </member>
        <member name="F:Starcounter.AggrTask.isTimedOud_">
            <summary>
            Is timed out.
            </summary>
        </member>
        <member name="P:Starcounter.AggrTask.TimedOut">
            <summary>
            Is task timed out.
            </summary>
        </member>
        <member name="P:Starcounter.AggrTask.AggrTaskIndex">
            <summary>
            Linear index of the task when aggregating.
            </summary>
        </member>
        <member name="P:Starcounter.AggrTask.TaskUniqueSalt">
            <summary>
            Unique aggregation salt.
            </summary>
        </member>
        <member name="P:Starcounter.AggrTask.CreatedTime">
            <summary>
            The time when this socket was created.
            </summary>
        </member>
        <member name="M:Starcounter.AggrTask.ResetSalt">
            <summary>
            Reset salt.
            </summary>
        </member>
        <member name="M:Starcounter.AggrTask.InitializeBeforeSend(Starcounter.AggregationClient)">
            <summary>
            Refreshing creation time.
            </summary>
        </member>
        <member name="F:Starcounter.AggrTask.receiveProc_">
            <summary>
            User delegate.
            </summary>
        </member>
        <member name="P:Starcounter.AggrTask.ReceiveProc">
            <summary>
            Receive delegate to call.
            </summary>
        </member>
        <member name="F:Starcounter.AggrTask.requestBytes_">
            <summary>
            Request bytes.
            </summary>
        </member>
        <member name="P:Starcounter.AggrTask.RequestBytes">
            <summary>
            Request bytes.
            </summary>
        </member>
        <member name="F:Starcounter.AggrTask.requestBytesLength_">
            <summary>
            Size of request in bytes.
            </summary>
        </member>
        <member name="P:Starcounter.AggrTask.RequestSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Starcounter.AggrTask.Init(Starcounter.AggregationClient,System.Byte[],System.Int32,System.Action{Starcounter.Response})">
            <summary>
            Creates new aggregation task.
            </summary>
            <param name="requestBytes">Request bytes.</param>
            <param name="requestBytesLength">Request size in bytes.</param>
            <param name="receiveProc">Receive procedure.</param>
        </member>
        <member name="M:Starcounter.AggrTask.#ctor(System.UInt16)">
            <summary>
            Initial constructor.
            </summary>
            <param name="aggrTaskIndex"></param>
        </member>
        <member name="M:Starcounter.AggrTask.DetachBuffers">
            <summary>
            Detach buffers when they are not needed (so GC can destroy them).
            </summary>
        </member>
        <member name="P:Starcounter.AggregationClient.CurrentTime">
            <summary>
            Returns time.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.AggregationBlobSizeBytes">
            <summary>
            Size of aggregation blob.
            </summary>
        </member>
        <member name="T:Starcounter.AggregationClient.AggregationStruct">
            <summary>
            Aggregation structure.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.AggregationStructSizeBytes">
            <summary>
            Size in bytes of aggregation structure.
            </summary>
        </member>
        <member name="P:Starcounter.AggregationClient.SentReceivedBalance">
            <summary>
            Current sent/received balance.
            </summary>
        </member>
        <member name="P:Starcounter.AggregationClient.NumRequestsSent">
            <summary>
            Total number of send requests.
            </summary>
        </member>
        <member name="P:Starcounter.AggregationClient.NumResponsesReceived">
            <summary>
            Total number of responses received.
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.IncrementUniqueSalt">
            <summary>
            Updates the unique salt.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.TimeIntervalSeconds">
            <summary>
            Time interval seconds.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.MinAwaitedResponses">
            <summary>
            Minimum number of awaited responses.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.MaxAwaitedResponses">
            <summary>
            Maximum number of awaited responses.
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.IncreaseLoad(System.Int32,System.Boolean)">
            <summary>
            Increases load in percent.
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.DecreaseLoad(System.Int32,System.Boolean)">
            <summary>
            Decreases load in percent.
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.#ctor(System.String,System.UInt16,System.UInt16,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.AggregateReceiveThread">
            <summary>
            Performs aggregation send. 
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.AggregateSendThread">
            <summary>
            Performs aggregation send. 
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.Send(System.String,System.Action{Starcounter.Response})">
            <summary>
            Sends given request data over aggregation protocol.
            </summary>
            <param name="reqString">HTTP complete request.</param>
            <param name="receiveProc">Receive procedure delegate.</param>
        </member>
        <member name="M:Starcounter.AggregationClient.Send(System.Byte[],System.Int32,System.Action{Starcounter.Response})">
            <summary>
            Sends given request data over aggregation protocol.
            </summary>
            <param name="reqBytes">HTTP complete request.</param>
            <param name="reqSize">HTTP request length in bytes.</param>
            <param name="receiveProc">Receive procedure delegate.</param>
        </member>
        <member name="M:Starcounter.AggregationClient.Send(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response})">
            <summary>
            Sends given request data over aggregation protocol.
            </summary>
            <param name="method">HTTP request method.</param>
            <param name="uri">HTTP relative URI.</param>
            <param name="body">Request body.</param>
            <param name="headersDict">Request headers dictionary.</param>
            <param name="receiveProc">Receive procedure delegate.</param>
        </member>
        <member name="M:Starcounter.AggregationClient.SendStatistics(System.String,System.Int32,System.Int32)">
            <summary>
            Reports statistics from this client.
            </summary>
            <param name="testName">Test name.</param>
            <param name="numOk">Number of successful responses.</param>
            <param name="numFailed">Number of failed responses.</param>
        </member>
        <member name="M:Starcounter.AggregationClient.Shutdown">
            <summary>
            Shutdown the aggregation client and corresponding threads.
            </summary>
        </member>
        <member name="M:Starcounter.AggregationClient.ResponsesProcThread">
            <summary>
            Processes received responses. 
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.shutdown_">
            <summary>
            Shutdown flag.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.aggregateSendBlob_">
            <summary>
            Bytes blob used for aggregated sends.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.aggrReceiveBlob_">
            <summary>
            Bytes blob used for aggregated receives.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.maxAwaitedResponses_">
            <summary>
            Maximum number of awaited responses.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.origMaxAwaitedResponses_">
            <summary>
            Original maximum number of awaited responses.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.endpoint_">
            <summary>
            Endpoint string for this aggregation client.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.aggrSocket_">
            <summary>
            Aggregation TCP socket.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.receiveAwaitingTasksArray_">
            <summary>
            Aggregation awaiting tasks array.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.tasksToSend_">
            <summary>
            Pending async tasks.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.timedOutTasks_">
            <summary>
            Timed out tasks.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.freeTasks_">
            <summary>
            Free task indexes.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.decreasedTasks_">
            <summary>
            Tasks to decrease the load.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.responseProcTasks_">
            <summary>
            Response processor tasks.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.currentTime_">
            <summary>
            Current time.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.receiveTimeoutSeconds_">
            <summary>
            Receive timeout in seconds.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.referenceAggrStruct_">
            <summary>
            Aggregation struct for this aggregation client.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.sentReceivedBalance_">
            <summary>
            Send/Received balance.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.numRequestsSent_">
            <summary>
            Send/Received balance.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.numResponsesReceived_">
            <summary>
            Send/Received balance.
            </summary>
        </member>
        <member name="F:Starcounter.AggregationClient.curAggrClientSalt_">
            <summary>
            Salt that is uniquely incremented.
            </summary>
        </member>
        <member name="F:Starcounter.Http.globalHttpClient_">
            <summary>
            Global HttpClient instance (with HTTP pipelining OFF).
            </summary>
        </member>
        <member name="F:Starcounter.Http.sendRecvBalance_">
            <summary>
            Send/Receive balance variable.
            </summary>
        </member>
        <member name="M:Starcounter.Http.#cctor">
            <summary>
            Does needed Http client initialization.
            </summary>
        </member>
        <member name="M:Starcounter.Http.DoHttpCallAsync(System.Net.Http.HttpRequestMessage,System.Int32,System.Action{Starcounter.Response})">
            <summary>
            Performs an async Http call using HttpClient.
            </summary>
        </member>
        <member name="M:Starcounter.Http.GenericHttpClientCall(System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs a sync or async HTTP REST call using HttpClient.
            </summary>
        </member>
        <member name="M:Starcounter.Http.GET``1(System.String,System.Int32)">
            <summary>
            Performs HTTP GET.
            </summary>
        </member>
        <member name="M:Starcounter.Http.GET(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs asynchronous HTTP GET.
            </summary>
        </member>
        <member name="M:Starcounter.Http.GET(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP GET.
            </summary>
        </member>
        <member name="M:Starcounter.Http.POST(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP POST.
            </summary>
        </member>
        <member name="M:Starcounter.Http.POST(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP POST.
            </summary>
        </member>
        <member name="M:Starcounter.Http.POST(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP POST.
            </summary>
        </member>
        <member name="M:Starcounter.Http.POST(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP POST.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PUT(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP PUT.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PUT(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP PUT.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PUT(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP PUT.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PUT(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP PUT.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PATCH(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP PATCH.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PATCH(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP PATCH.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PATCH(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP PATCH.
            </summary>
        </member>
        <member name="M:Starcounter.Http.PATCH(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP PATCH.
            </summary>
        </member>
        <member name="M:Starcounter.Http.DELETE(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP DELETE.
            </summary>
        </member>
        <member name="M:Starcounter.Http.DELETE(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs asynchronous HTTP DELETE.
            </summary>
        </member>
        <member name="M:Starcounter.Http.DELETE(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP DELETE.
            </summary>
        </member>
        <member name="M:Starcounter.Http.DELETE(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP DELETE.
            </summary>
        </member>
        <member name="M:Starcounter.Http.CustomRESTRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs synchronous HTTP request.
            </summary>
        </member>
        <member name="M:Starcounter.Http.CustomRESTRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP request.
            </summary>
        </member>
        <member name="M:Starcounter.Http.CustomRESTRequest(System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Starcounter.Response},System.Int32)">
            <summary>
            Performs synchronous HTTP request.
            </summary>
        </member>
        <member name="M:Starcounter.Http.CustomRESTRequest(System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Performs synchronous HTTP request.
            </summary>
        </member>
        <member name="T:Starcounter.Cookie">
            <summary>
            HTTP cookie helper class.
            </summary>
        </member>
        <member name="M:Starcounter.Cookie.#ctor(System.String)">
            <summary>
            String Value to parse cookie from.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="F:Starcounter.TcpSocket.socketStruct_">
            <summary>
            Socket structure.
            </summary>
        </member>
        <member name="P:Starcounter.TcpSocket.InternalSocketStruct">
            <summary>
            Socket structure.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.#ctor(System.UInt64)">
            <summary>
            Converts UInt64 TcpSocket into an object.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.ToUInt64">
            <summary>
            Converts socket struct to lower and upper parts.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.#ctor(Starcounter.NetworkDataStream)">
            <summary>
            Creates a new TcpSocket.
            </summary>
        </member>
        <member name="T:Starcounter.TcpSocket.RegisterTcpSocketHandlerDelegate">
            <summary>
            Register TCP socket handler.
            </summary>
        </member>
        <member name="F:Starcounter.TcpSocket.RegisterTcpSocketHandler_">
            <summary>
            Delegate to register TCP handler.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.InitTcpSockets(Starcounter.TcpSocket.RegisterTcpSocketHandlerDelegate)">
            <summary>
            Initializes TCP sockets.
            </summary>
            <param name="registerTcpHandlerNative"></param>
        </member>
        <member name="F:Starcounter.TcpSocket.Current_">
            <summary>
            Current RawSocket object.
            </summary>
        </member>
        <member name="P:Starcounter.TcpSocket.Current">
            <summary>
            Current RawSocket object.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.IsDead">
            <summary>
            Checks if socket is dead.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Starcounter.TcpSocket.TempDisconnectBuffer">
            <summary>
            TODO: Get rid of that!
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.Disconnect">
            <summary>
            Disconnects active socket.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.Destroy(System.Boolean)">
            <summary>
            Destroys the socket.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.Send(System.Byte[])">
            <summary>
            Send data over Tcp socket.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Send data over Tcp socket.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.Send(System.Byte[],System.Int32,System.Int32,Starcounter.Response.ConnectionFlags)">
            <summary>
            Send data over Tcp socket.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.SendStreamOverSocket">
            <summary>
            Streaming over TCP socket.
            NOTE: Function closes the stream once the end of stream is reached.
            </summary>
        </member>
        <member name="M:Starcounter.TcpSocket.PushServerMessage(System.Byte[],System.Int32,System.Int32,Starcounter.Response.ConnectionFlags)">
            <summary>
            Pushes server message over socket.
            </summary>
        </member>
        <member name="T:Starcounter.Rest.ExtensionMethods.ResponseExtensions">
            <summary>
            Provides a set of extension methods for the <see cref="T:Starcounter.Response"/>
            class.
            </summary>
        </member>
        <member name="F:Starcounter.Rest.ExtensionMethods.ResponseExtensions.OnUnexpectedResponse">
            <summary>
            The handler invoked when any of the FailIf* methods are
            used and the given response fails to meet the expectations.
            </summary>
        </member>
        <member name="T:Starcounter.WebSocket.WsHandlerType">
            <summary>
            Type of handler for WebSocket.
            </summary>
        </member>
        <member name="T:Starcounter.WebSocket.WebSocketCloseCodes">
            <summary>
            WebSocket close codes.
            </summary>
        </member>
        <member name="F:Starcounter.WebSocket.Current_">
            <summary>
            Current WebSocket object.
            </summary>
        </member>
        <member name="P:Starcounter.WebSocket.Current">
            <summary>
            Current WebSocket object.
            </summary>
        </member>
        <member name="F:Starcounter.WebSocket.socketStruct_">
            <summary>
            Socket structure.
            </summary>
        </member>
        <member name="P:Starcounter.WebSocket.InternalSocketStruct">
            <summary>
            Socket structure.
            </summary>
        </member>
        <member name="P:Starcounter.WebSocket.Session">
            <summary>
            Reference to existing session if any.
            </summary>
        </member>
        <member name="P:Starcounter.WebSocket.IsText">
            <summary>
            Is a text or binary message?
            </summary>
        </member>
        <member name="P:Starcounter.WebSocket.Message">
            <summary>
            Received text message.
            </summary>
        </member>
        <member name="P:Starcounter.WebSocket.Bytes">
            <summary>
            Received binary bytes.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.IsDead">
            <summary>
            Checks if socket is dead.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.Disconnect(System.String,Starcounter.WebSocket.WebSocketCloseCodes)">
            <summary>
            Disconnects active WebSocket.
            </summary>
            <param name="message">Optional error message.</param>
            <param name="code">Optional error code.</param>
        </member>
        <member name="M:Starcounter.WebSocket.SendStreamOverSocket(System.IO.Stream,System.Byte[],System.Boolean)">
            <summary>
            Streaming over TCP socket.
            NOTE: Function closes the stream once the end of stream is reached.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.Send(System.Byte[],System.Boolean,Starcounter.Response.ConnectionFlags)">
            <summary>
            Server push on WebSocket.
            </summary>
            <param name="data">Data to push.</param>
            <param name="isText">Is given data a text?</param>
            <param name="connFlags">Connection flags on the push.</param>
        </member>
        <member name="M:Starcounter.WebSocket.Send(System.Byte[],System.Int32,System.Boolean,Starcounter.Response.ConnectionFlags)">
            <summary>
            Server push on WebSocket.
            </summary>
            <param name="data">Data to push.</param>
            <param name="dataLen">Length of data in bytes.</param>
            <param name="isText">Is given data a text?</param>
            <param name="connFlags">Connection flags on the push.</param>
        </member>
        <member name="M:Starcounter.WebSocket.Send(System.String,System.Boolean,Starcounter.Response.ConnectionFlags)">
            <summary>
            Server push on WebSocket.
            </summary>
            <param name="data">Data to push.</param>
            <param name="isText">Is given data a text?</param>
            <param name="connFlags">Connection flags on the push.</param>
        </member>
        <member name="M:Starcounter.WebSocket.#ctor(Starcounter.Internal.SocketStruct,System.String,System.Byte[],System.Boolean,Starcounter.WebSocket.WsHandlerType)">
            <summary>
            Internal WebSocket creation.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.ToUInt64">
            <summary>
            Converts socket struct to lower and upper parts.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.#ctor(System.UInt64)">
            <summary>
            Converts UInt64 WebSocket ID into an object.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.#ctor(Starcounter.NetworkDataStream)">
            <summary>
            Converts lower and upper part of WebSocket into an object.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.Destroy(System.Boolean)">
            <summary>
            Destroys the socket.
            </summary>
        </member>
        <member name="M:Starcounter.WebSocket.PushServerMessage(System.Byte[],System.Int32,System.Boolean,Starcounter.Response.ConnectionFlags)">
            <summary>
            Creates new Request based on session.
            </summary>
        </member>
        <member name="T:Starcounter.ProfilerNames">
            <summary>
            Globally defined profilers.
            </summary>
        </member>
        <member name="T:Starcounter.CheckpointNames">
            <summary>
            Globally defined checkpoints.
            </summary>
        </member>
        <member name="T:Starcounter.PreciseTimer">
            <summary>
            Class PreciseTimer
            </summary>
        </member>
        <member name="M:Starcounter.PreciseTimer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.PreciseTimer" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.PreciseTimer.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Starcounter.PreciseTimer.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Starcounter.PreciseTimer.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="P:Starcounter.PreciseTimer.StartCount">
            <summary>
            Gets the start count.
            </summary>
            <value>The start count.</value>
        </member>
        <member name="P:Starcounter.PreciseTimer.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Starcounter.PreciseTimer.DurationMcs">
            <summary>
            Gets the duration MCS.
            </summary>
            <value>The duration MCS.</value>
        </member>
        <member name="T:Starcounter.DescriptionExtensions">
            <summary>
            To be able to add description to a enum.
            </summary>
        </member>
        <member name="T:Starcounter.Profiler">
            <summary>
            Class Profiler
            </summary>
        </member>
        <member name="F:Starcounter.Profiler.schedulersProfilers_">
            <summary>
            All static profilers in the system.
            </summary>
        </member>
        <member name="F:Starcounter.Profiler.unitTests_">
            <summary>
            Indicates if running non hosted unit tests.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.Init(System.Boolean)">
            <summary>
            Setting up the profilers.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.SetupHandler(System.UInt16,System.String)">
            <summary>
            Setting up the profilers.
            </summary>
        </member>
        <member name="P:Starcounter.Profiler.Current">
            <summary>
            Current (belonging to scheduler) profiler.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.Profiler" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.Checkpoint(Starcounter.CheckpointNames)">
            <summary>
            Used to count how many times execution went through this checkpoint.
            </summary>
            <example>
            Profiler.Current.Checkpoint(CheckpointNames.Empty);
            </example>
        </member>
        <member name="M:Starcounter.Profiler.Start(Starcounter.ProfilerNames)">
            <summary>
            Starts specified profiler.
            </summary>
            <example>
            Profiler.Current.Start(ProfilerNames.Empty);
            </example>
        </member>
        <member name="M:Starcounter.Profiler.Stop(Starcounter.ProfilerNames)">
            <summary>
            Stops specified profiler.
            </summary>
            <example>
            Profiler.Current.Stop(ProfilerNames.Empty);
            </example>
        </member>
        <member name="M:Starcounter.Profiler.ResetAll">
            <summary>
            Resets all profilers.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.GetResultsInJson(Starcounter.ProfilerNames,System.Int32,System.Boolean)">
            <summary>
            Gets profiling results when specified timer reaches certain start count.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.DrawResults">
            <summary>
            Prints profiler results to the console.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.GetResultsInJson(System.Boolean)">
            <summary>
            Fetches all profiler results.
            </summary>
        </member>
        <member name="M:Starcounter.Profiler.GetSpecific(Starcounter.ProfilerNames,System.Boolean)">
            <summary>
            Gets specific profiler results and resets its counter.
            </summary>
        </member>
        <member name="M:Starcounter.Self.GET``1(System.String,Starcounter.HandlerOptions)">
            <summary>
            Makes an internal HTTP GET call. 
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="M:Starcounter.Self.GET``1(System.UInt16,System.String,Starcounter.HandlerOptions)">
            <summary>
            Makes an internal HTTP GET call on a specific port.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="F:Starcounter.Self.SubstituteObsoletionString">
            <summary>
            SubstituteObsoletionString.
            </summary>
        </member>
        <member name="M:Starcounter.Self.GET``1(System.String,System.Func{Starcounter.Response})">
            <summary>
            Makes an internal HTTP GET call.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="M:Starcounter.Self.GET``1(System.UInt16,System.String,System.Func{Starcounter.Response})">
            <summary>
            Makes an internal HTTP GET call.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="M:Starcounter.Self.GET(System.String)">
            <summary>
            Makes an internal HTTP GET call.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="M:Starcounter.Self.GET(System.String,System.Object)">
            <summary>
            Makes an internal HTTP GET call with a database object as an argument.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
            <param name="uri">Uri to which the call is performed.</param>
            <param name="databaseObject">Database object to pass.</param>
            <returns>Response from Self call.</returns>
        </member>
        <member name="M:Starcounter.Self.GET(System.UInt16,System.String)">
            <summary>
            Makes an internal HTTP GET call on a specific port.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="M:Starcounter.Self.GET(System.UInt16,System.String,System.Object)">
            <summary>
            Makes an internal HTTP GET call with a database object as an argument.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
            <param name="port">Port to which the call is performed.</param>
            <param name="uri">Uri to which the call is performed.</param>
            <param name="databaseObject">Database object to pass.</param>
            <returns>Response from Self call.</returns>
        </member>
        <member name="M:Starcounter.Self.GET(System.String,System.Func{Starcounter.Response})">
            <summary>
            Performs HTTP GET and provides substitute handler.
            </summary>
        </member>
        <member name="M:Starcounter.Self.GET(System.UInt16,System.String,System.Func{Starcounter.Response})">
            <summary>
            Performs HTTP GET and provides substitute handler.
            </summary>
        </member>
        <member name="M:Starcounter.Self.GET(System.String,System.Collections.Generic.Dictionary{System.String,System.String},Starcounter.HandlerOptions)">
            <summary>
            Makes an internal asynchronous HTTP GET call.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="M:Starcounter.Self.GET(System.UInt16,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Starcounter.HandlerOptions)">
            <summary>
            Makes an internal asynchronous HTTP GET call on a specific port.
            </summary>
            <remarks>
            Internal calls are restricted by the app boundary - they can only call handlers defined in the same app.
            This method returns null if there's no handler with the specified URI.
            </remarks>
        </member>
        <member name="M:Starcounter.Self.POST(System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.UInt16,Starcounter.HandlerOptions)">
            <summary>
            Performs asynchronous HTTP POST.
            </summary>
        </member>
        <member name="M:Starcounter.Self.PUT(System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.UInt16,Starcounter.HandlerOptions)">
            <summary>
            Performs asynchronous HTTP PUT.
            </summary>
        </member>
        <member name="M:Starcounter.Self.PATCH(System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.UInt16,Starcounter.HandlerOptions)">
            <summary>
            Performs asynchronous HTTP PATCH.
            </summary>
        </member>
        <member name="M:Starcounter.Self.DELETE(System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.UInt16,Starcounter.HandlerOptions)">
            <summary>
            Performs asynchronous HTTP DELETE.
            </summary>
        </member>
        <member name="M:Starcounter.Self.CustomRESTRequest(System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.UInt16,Starcounter.HandlerOptions)">
            <summary>
            Performs synchronous HTTP request with given HTTP method.
            </summary>
        </member>
        <member name="M:Starcounter.Self.CustomRESTRequest(Starcounter.Request,Starcounter.HandlerOptions)">
            <summary>
            Performs synchronous HTTP request with given HTTP method.
            </summary>
        </member>
        <member name="M:Starcounter.Self.CallUsingExternalRequest(Starcounter.Request,System.Func{Starcounter.Response})">
            <summary>
            Performs synchronous HTTP request with given original external request.
            </summary>
        </member>
        <member name="T:Starcounter.Self.RunUriMatcherAndCallHandlerDelegate">
            <summary>
            Delegate to run URI matcher and call handler.
            </summary>
        </member>
        <member name="F:Starcounter.Self.runUriMatcherAndCallHandler_">
            <summary>
            Performs local REST call.
            </summary>
        </member>
        <member name="M:Starcounter.Self.InjectDelegates(Starcounter.Self.RunUriMatcherAndCallHandlerDelegate,System.Func{System.IntPtr,System.IntPtr,Starcounter.Request,Starcounter.Response})">
            <summary>
            Initializes delegates.
            </summary>
        </member>
        <member name="M:Starcounter.Self.DoSelfCall(System.UInt16,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Byte[],Starcounter.HandlerOptions,Starcounter.Request)">
            <summary>
            Perform Self call.
            </summary>
        </member>
        <member name="T:Starcounter.DbTaskScheduler">
            <summary>
            Task scheduler scheduling tasks on a 2.x Starcounter scheduler.
            </summary>
        </member>
        <member name="T:Starcounter.IDbSession">
            <summary>
            Represents a database session.
            </summary>
        </member>
        <member name="M:Starcounter.IDbSession.RunAsync(System.Action,System.Boolean,System.Byte)">
            <summary>
            Runs a task asynchronously on a given scheduler.
            </summary>
        </member>
        <member name="T:Starcounter.Scheduling">
            <summary>
            Starcounter scheduler.
            </summary>
        </member>
        <member name="F:Starcounter.Scheduling._dbSession">
            <summary>
            Database session interface.
            </summary>
        </member>
        <member name="M:Starcounter.Scheduling.SetDbSessionImplementation(Starcounter.IDbSession)">
            <summary>
            Setting actual database session implementation.
            </summary>
        </member>
        <member name="M:Starcounter.Scheduling.ScheduleTask(System.Action,System.Boolean,System.Byte)">
            <summary>
            Schedules given task represented by the action delegate. The task is placed into queue
            and is processed by corresponding scheduler when picked from the queue. In case when "schedId" is not 
            set to a specific scheduler - processing scheduler is picked in round robin manner.
            In case when "waitForCompletion" flag is set, the completion of the task is awaited.
            </summary>
            <param name="action">Action to be run on scheduler.</param>
            <param name="waitForCompletion">Should we wait for the task to be completed.</param>
            <param name="schedulerId">Scheduler ID to run on.</param>
        </member>
        <member name="M:Starcounter.Scheduling.RunTask(System.Action,System.Byte)">
            <summary>
            Schedules given task represented by the action delegate. The task is placed into queue
            and is processed by corresponding scheduler when picked from the queue. In case when "schedId" is not 
            set to a specific scheduler - processing scheduler is picked in round robin manner.
            </summary>
            <param name="action">Action to be run on scheduler.</param>
            <param name="schedulerId">Scheduler ID to run on.</param>
            <returns>Corresponding .NET Task object for tracking the task.</returns>
        </member>
        <member name="T:Starcounter.Request">
            <summary>
            Class Request
            </summary>
        </member>
        <member name="M:Starcounter.Request.#ctor">
            <summary>
            Request constructor.
            </summary>
        </member>
        <member name="F:Starcounter.Request.isSingleChunk_">
            <summary>
            Is single chunk?
            </summary>
        </member>
        <member name="F:Starcounter.Request.socketDataIntPtr_">
            <summary>
            Socket data buffer.
            </summary>
        </member>
        <member name="F:Starcounter.Request.http_request_struct_">
            <summary>
            Internal structure with HTTP request information.
            </summary>
        </member>
        <member name="F:Starcounter.Request.origChunk_">
            <summary>
            Pointer to original chunk.
            </summary>
        </member>
        <member name="F:Starcounter.Request.session_">
            <summary>
            Direct pointer to session data.
            </summary>
        </member>
        <member name="F:Starcounter.Request.dataStream_">
            <summary>
            Internal network data stream.
            </summary>
        </member>
        <member name="P:Starcounter.Request.DataStream">
            <summary>
            Gets network data stream.
            </summary>
        </member>
        <member name="F:Starcounter.Request.portNumber_">
            <summary>
            Network port number.
            </summary>
        </member>
        <member name="F:Starcounter.Request.isExternalRequest_">
            <summary>
            Indicates if this Request is externally constructed.
            </summary>
        </member>
        <member name="F:Starcounter.Request.isStaticFileRequest_">
            <summary>
            Indicates if this Request is a static file handler request.
            </summary>
        </member>
        <member name="F:Starcounter.Request.requestBytes_">
            <summary>
            Bytes for the corresponding request.
            </summary>
        </member>
        <member name="F:Starcounter.Request.requestBytesLen_">
            <summary>
            Request bytes length.
            </summary>
        </member>
        <member name="F:Starcounter.Request.webSocketUpgrade_">
            <summary>
            Indicates if WebSocket upgrade is requested.
            </summary>
        </member>
        <member name="F:Starcounter.Request.isAggregated_">
            <summary>
            Indicates if request is aggregated.
            </summary>
        </member>
        <member name="F:Starcounter.Request.messageObjectType_">
            <summary>
            Just using Request as holder for user Message instance type.
            </summary>
        </member>
        <member name="F:Starcounter.Request.managedHandlerId_">
            <summary>
            Managed handler id.
            </summary>
        </member>
        <member name="F:Starcounter.Request.customFields_">
            <summary>
            Indicates if user wants to send custom request.
            </summary>
        </member>
        <member name="F:Starcounter.Request.bodyString_">
            <summary>
            Body string.
            </summary>
        </member>
        <member name="F:Starcounter.Request.bodyBytes_">
            <summary>
            Body bytes.
            </summary>
        </member>
        <member name="F:Starcounter.Request.cookies_">
            <summary>
            List of cookies.
            </summary>
        </member>
        <member name="F:Starcounter.Request.methodString_">
            <summary>
            HTTP method.
            </summary>
        </member>
        <member name="F:Starcounter.Request.uriString_">
            <summary>
            HTTP uri.
            </summary>
        </member>
        <member name="F:Starcounter.Request.hostNameString_">
            <summary>
            Host name.
            </summary>
        </member>
        <member name="F:Starcounter.Request.headersString_">
            <summary>
            String containing all headers.
            </summary>
        </member>
        <member name="F:Starcounter.Request.customHeaderFields_">
            <summary>
            Dictionary of simple user custom headers.
            </summary>
        </member>
        <member name="F:Starcounter.Request.came_with_correct_session_">
            <summary>
            Indicates if came with session originally.
            </summary>
        </member>
        <member name="F:Starcounter.Request.handlerAppName_">
            <summary>
            Request application name.
            </summary>
        </member>
        <member name="P:Starcounter.Request.HandlerOpts">
            <summary>
            Handler options.
            </summary>
        </member>
        <member name="P:Starcounter.Request.PortNumber">
            <summary>
            Network port number.
            </summary>
        </member>
        <member name="P:Starcounter.Request.PreferredMimeTypeString">
            <summary>
            Returns a preferred MIME type in string format.
            </summary>
        </member>
        <member name="P:Starcounter.Request.PreferredMimeTypesStrings">
            <summary>
            Returns a list of requested mime types in preference order as discovered in the Accept header
            of the request.
            </summary>
        </member>
        <member name="P:Starcounter.Request.PreferredMimeType">
            Returns the single most preferred mime type according to the Accept header of the request amongst a 
            set of common mime types. If the mime type is not in the enum of known common mime types, the
            value MimeType.Other is returned. If there is no Accept header or if the Accept header is empty,
            the value MimeType.Unspecified is returned.
            <remarks>
            TODO! Implement proper fast method! Include all mime types in xml file and speed up using
            similar code generation as the URI matcher.
            </remarks>
        </member>
        <member name="P:Starcounter.Request.PreferredMimeTypes">
            <summary>
            Returns a list of requested mime types in preference order as discovered in the Accept header
            of the request.
            </summary>
            <remarks>
            TODO! Implement! Does currently only return a single mime type and supports only a few mime types.
            </remarks>
        </member>
        <member name="P:Starcounter.Request.IsAggregated">
            <summary>
            Returns True if request was aggregated.
            </summary>
        </member>
        <member name="P:Starcounter.Request.WebSocketUpgrade">
            <summary>
            Returns protocol type.
            </summary>
        </member>
        <member name="P:Starcounter.Request.ArgMessageObjectType">
            <summary>
            Setting message object type.
            </summary>
        </member>
        <member name="P:Starcounter.Request.ArgMessageObjectCreate">
            <summary>
            Setting function for creating a new instance of the message object.
            </summary>
        </member>
        <member name="P:Starcounter.Request.MethodEnum">
            <summary>
            Accessors to HTTP method.
            </summary>
        </member>
        <member name="M:Starcounter.Request.InitExternal(System.Byte*,System.Boolean,System.UInt32,System.UInt16,System.Byte*,System.Byte*,System.IntPtr,Starcounter.NetworkDataStream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.Request" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetWebSocketId">
            <summary>
            Getting WebSocket UInt64 id from request information.
            </summary>
            <returns>UInt64 representing WebSocket id.</returns>
        </member>
        <member name="M:Starcounter.Request.GetSocketId">
            <summary>
            Getting socket UInt64 id from request information.
            </summary>
            <returns>UInt64 representing socket id.</returns>
        </member>
        <member name="M:Starcounter.Request.SendUpgrade(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String},Starcounter.Session)">
            <summary>
            Sends the WebSocket upgrade HTTP response and creates a WebSocket object.
            </summary>
            <param name="groupName">WebSocket group name for subsequent events on created WebSocket.</param>
            <param name="cargoId">Integer identifier supplied from user that comes inside WebSocket object in subsequent events.</param>
            <param name="session">Session that should be attached to the created WebSocket.</param>
            <returns>Created WebSocket object that immediately can be used.</returns>
        </member>
        <member name="M:Starcounter.Request.DestroyByFinalizer">
            <summary>
            Destroys the instance of Request.
            </summary>
        </member>
        <member name="M:Starcounter.Request.ShouldBeFinalized">
            <summary>
            Should the request have a finalizer?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Request.Destroy(System.Boolean)">
            <summary>
            Destroys the instance of Request.
            </summary>
        </member>
        <member name="M:Starcounter.Request.IsLoopingHostChunk">
            <summary>
            Checking if its a looping host chunk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Request.Debug(System.String,System.Exception)">
            <summary>
            Debugs the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="P:Starcounter.Request.IsExternal">
            <summary>
            Returns True if request is external.
            </summary>
        </member>
        <member name="P:Starcounter.Request.IsStaticFileRequest">
            <summary>
            Returns True if request is for static file handler.
            </summary>
        </member>
        <member name="P:Starcounter.Request.HandlerAppName">
            <summary>
            To which application/handler this request belongs to.
            </summary>
        </member>
        <member name="P:Starcounter.Request.ManagedHandlerId">
            <summary>
            Linear index for this handler.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetRawParametersInfo">
            <summary>
            Gets the raw parameters structure.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetParametersInfo">
            <summary>
            Gets the raw parameters structure.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetRawMethodAndUri">
            <summary>
            Gets the raw method and URI.
            </summary>
            <param name="ptr">The PTR.</param>
            <param name="sizeBytes">The size bytes.</param>
        </member>
        <member name="P:Starcounter.Request.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:Starcounter.Request.ContentEncoding">
            <summary>
            Content encoding.
            </summary>
        </member>
        <member name="P:Starcounter.Request.Body">
            <summary>
            Body string.
            </summary>
        </member>
        <member name="P:Starcounter.Request.BodyObject">
            <summary>
            Arbitrary object used to pass for Self calls.
            </summary>
        </member>
        <member name="P:Starcounter.Request.BodyBytes">
            <summary>
            Body bytes.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetAllHeaders">
            <summary>
            Headers string.
            </summary>
        </member>
        <member name="P:Starcounter.Request.Cookies">
            <summary>
            List of Cookie headers.
            Each string is in the form of "key=value".
            </summary>
        </member>
        <member name="P:Starcounter.Request.Method">
            <summary>
            Method string.
            </summary>
        </member>
        <member name="P:Starcounter.Request.Uri">
            <summary>
            Uri string.
            </summary>
        </member>
        <member name="P:Starcounter.Request.Host">
            <summary>
            HostName string.
            </summary>
        </member>
        <member name="M:Starcounter.Request.EstimateNeededSize">
            <summary>
            Estimate response size in bytes.
            </summary>
        </member>
        <member name="M:Starcounter.Request.ConstructFromFields(System.Boolean,System.Byte[])">
            <summary>
            Constructs Response from fields that are set.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetBodyRaw(System.IntPtr@,System.UInt32@)">
            <summary>
            Gets the content raw pointer.
            </summary>
            <param name="ptr">The PTR.</param>
            <param name="sizeBytes">The size bytes.</param>
        </member>
        <member name="P:Starcounter.Request.RequestBytes">
            <summary>
            Obtain available request bytes.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetRequestByteArray_Slow">
            <summary>
            Gets the request as byte array.
            </summary>
            <returns>Request bytes.</returns>
        </member>
        <member name="P:Starcounter.Request.ClientIpAddress">
            <summary>
            Gets the client IP address.
            </summary>
        </member>
        <member name="P:Starcounter.Request.RequestLength">
            <summary>
            Request length in bytes.
            </summary>
        </member>
        <member name="P:Starcounter.Request.ContentLength">
            <summary>
            Gets the length of the content in bytes.
            </summary>
        </member>
        <member name="M:Starcounter.Request.SendResponse(System.Byte[],System.Int32,System.Int32,Starcounter.Response.ConnectionFlags)">
            <summary>
            Sends the response.
            </summary>
        </member>
        <member name="M:Starcounter.Request.SendResponse(Starcounter.Response)">
            <summary>
            Sends response on this request.
            </summary>
        </member>
        <member name="M:Starcounter.Request.SendResponse(Starcounter.Response,System.Byte[])">
            <summary>
            Sends response on this request.
            </summary>
        </member>
        <member name="M:Starcounter.Request.SendResponseInternal(Starcounter.Response,System.Byte[])">
            <summary>
            Sends response on this request.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetRawMethodAndUri(System.IntPtr@,System.Int32@)">
            <summary>
            Gets the raw method and URI.
            </summary>
        </member>
        <member name="P:Starcounter.Request.HeadersDictionary">
            <summary>
            Headers dictionary accessors.
            </summary>
        </member>
        <member name="T:Starcounter.Request.HeadersAccessor">
            <summary>
            Accessors for headers.
            </summary>
        </member>
        <member name="F:Starcounter.Request.Headers">
            <summary>
            Accessor to response headers.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetHeader(System.String)">
            <summary>
            Get the value of specific header.
            </summary>
            <param name="name">Header name.</param>
            <returns>Header value.</returns>
        </member>
        <member name="M:Starcounter.Request.SetHeader(System.String,System.String)">
            <summary>
            Set the value of a specific header.
            </summary>
            <param name="name">Header name.</param>
            <param name="value">Header value.</param>
        </member>
        <member name="M:Starcounter.Request.CreateHeadersDictionaryFromHeadersString(System.String)">
            <summary>
            Splits headers string into dictionary.
            </summary>
        </member>
        <member name="P:Starcounter.Request.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String" /> with the specified name.
            </summary>
        </member>
        <member name="F:Starcounter.Request.INVALID_GW_SESSION_INDEX">
            <summary>
            Invalid session index.
            </summary>
        </member>
        <member name="F:Starcounter.Request.INVALID_APPS_UNIQUE_SESSION_INDEX">
            <summary>
            Invalid Apps session unique number.
            </summary>
        </member>
        <member name="F:Starcounter.Request.INVALID_APPS_SESSION_SALT">
            <summary>
            Invalid Apps session salt.
            </summary>
        </member>
        <member name="F:Starcounter.Request.INVALID_APPS_SESSION_INDEX">
            <summary>
            Invalid Apps session index.
            </summary>
        </member>
        <member name="F:Starcounter.Request.INVALID_VIEW_MODEL_INDEX">
            <summary>
            Invalid View model index.
            </summary>
        </member>
        <member name="P:Starcounter.Request.CameWithCorrectSession">
            <summary>
            Checks if HTTP request already came with session.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GetAppsSessionInterface">
            <summary>
            Gets certain Apps session.
            </summary>
        </member>
        <member name="M:Starcounter.Request.GenerateNewSession(Starcounter.Session)">
            <summary>
            Generates new session.
            </summary>
        </member>
        <member name="P:Starcounter.Request.IsGzipAccepted">
            <summary>
            Gets the is gzip accepted.
            </summary>
            <value>The is gzip accepted.</value>
        </member>
        <member name="M:Starcounter.Request.ToString">
            <summary>
            Returns a string that represents the request.
            </summary>
            <returns>A string that represents the request.</returns>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetBodyRaw(System.IntPtr@,System.UInt32@)">
            <summary>
            Gets the content raw pointer.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetBodyByteArray_Slow">
            <summary>
            Gets the content as byte array.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetRequestStringUtf8_Slow">
            <summary>
            Gets body as UTF8 string.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetRequestByteArray_Slow">
            <summary>
            Gets the request as byte array.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetBodyStringUtf8_Slow">
            <summary>
            Gets body as UTF8 string.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetRawMethodAndUri(System.IntPtr@,System.Int32@)">
            <summary>
            Gets the raw method and URI.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetRawMethodAndUri">
            <summary>
            Gets the raw method and URI.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetHeadersStringUtf8_Slow">
            <summary>
            Gets headers as ASCII string.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetRawSessionString(System.IntPtr@)">
            <summary>
            Gets the raw session string.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetSessionString">
            <summary>
            Gets the session string.
            </summary>
        </member>
        <member name="M:Starcounter.HttpRequestInternal.GetHeaderValue(System.String,System.String@)">
            <summary>
            Gets the header value.
            </summary>
        </member>
        <member name="P:Starcounter.HttpRequestInternal.Uri">
            <summary>
            Gets the URI.
            </summary>
        </member>
        <member name="T:Starcounter.Response">
            <summary>
            Represents an HTTP response.
            </summary>
            <remarks>
            The Starcounter Web Server caches resources as complete http responses.
            As the exact same response can often not be used, the cashed response also
            include useful offsets and injection points to facilitate fast transitions
            to individual http responses. The cached response is also used to cache resources
            (compressed or uncompressed content) even if the consumer wants to embed the content
            in a new http response.
            </remarks>
        </member>
        <member name="M:Starcounter.Response.FromStatusCode(System.Int32)">
            <summary>
            Creates a response from an HTTP status code
            as defined in section
            <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1.1">
            6.1.1</see> of the HTTP specification (RFC2616).
            </summary>
            <param name="statusCode">The status code (for instance 404)</param>
            <returns>The complete response</returns>
        </member>
        <member name="M:Starcounter.Response.FromStatusCode(System.Int32,System.String)">
            <summary>
            Creates a response from an HTTP status code
            as defined in section
            <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1.1">
            6.1.1</see> of the HTTP specification (RFC2616) and body string.
            </summary>
            <param name="statusCode">The status code (for instance 404)</param>
            <param name="body">The body string</param>
            <returns>The complete response</returns>
        </member>
        <member name="M:Starcounter.Response.FromStatusCode(System.Int32,System.Byte[])">
            <summary>
            Creates a response from an HTTP status code
            as defined in section
            <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1.1">
            6.1.1</see> of the HTTP specification (RFC2616) and body bytes.
            </summary>
            <param name="statusCode">The status code (for instance 404)</param>
            <param name="bodyBytes">The body bytes</param>
            <returns>The complete response</returns>
        </member>
        <member name="P:Starcounter.Response.HeadersAccessor.Item(System.String)">
            <summary>
            Gets the response header with the specified name.
            </summary>
            <param name="name">The header name.</param>
        </member>
        <member name="F:Starcounter.Response.Headers">
            <summary>
            Accessor to response headers.
            </summary>
        </member>
        <member name="F:Starcounter.Response.ResponsesMergerRoutine_">
            <summary>
            Pointer to the merging routine.
            </summary>
        </member>
        <member name="F:Starcounter.Response.currentDateHeaderBytes_">
            <summary>
            Current time bytes.
            </summary>
        </member>
        <member name="M:Starcounter.Response.HttpDateUpdateProcedure(System.Object)">
            <summary>
            Update current time.
            </summary>
        </member>
        <member name="F:Starcounter.Response.appName_">
            <summary>
            Application name this response came from.
            </summary>
        </member>
        <member name="F:Starcounter.Response.bufferContainingResponse_">
            <summary>
            The buffer containing the response (could be within offset!).
            </summary>
        </member>
        <member name="F:Starcounter.Response.responseSizeBytes_">
            <summary>
            The plain response size bytes.
            </summary>
        </member>
        <member name="F:Starcounter.Response.uris_">
            <summary>
            URIs related to this static resource.
            </summary>
        </member>
        <member name="F:Starcounter.Response.filePath_">
            <summary>
            File path to static resource.
            </summary>
        </member>
        <member name="F:Starcounter.Response.fileDirectory_">
            <summary>
            File directory for this file resource.
            </summary>
        </member>
        <member name="F:Starcounter.Response.fileName_">
            <summary>
            File name for this file resource.
            </summary>
        </member>
        <member name="F:Starcounter.Response.fileExists_">
            <summary>
            Does file for this static resource exist?
            </summary>
        </member>
        <member name="F:Starcounter.Response.fileModifiedDate_">
            <summary>
            Date of file modification for this file resource (in RFC 1123 format).
            </summary>
        </member>
        <member name="F:Starcounter.Response.customFields_">
            <summary>
            Indicates if user wants to send custom response.
            </summary>
        </member>
        <member name="F:Starcounter.Response.statusCode_">
            <summary>
            Status code.
            </summary>
        </member>
        <member name="F:Starcounter.Response.handlingStatus_">
            <summary>
            Handling status.
            </summary>
        </member>
        <member name="F:Starcounter.Response.connectionFlags_">
            <summary>
            Connection flags.
            </summary>
        </member>
        <member name="F:Starcounter.Response.bodyString_">
            <summary>
            Body string.
            </summary>
        </member>
        <member name="F:Starcounter.Response.bodyStream_">
            <summary>
            Body stream.
            </summary>
        </member>
        <member name="F:Starcounter.Response.bodyBytes_">
            <summary>
            Body bytes.
            </summary>
        </member>
        <member name="F:Starcounter.Response.statusDescription_">
            <summary>
            Status description string.
            </summary>
        </member>
        <member name="F:Starcounter.Response.resource_">
            <summary>
            Resource representation.
            </summary>
        </member>
        <member name="F:Starcounter.Response.cookies_">
            <summary>
            List of cookies.
            </summary>
        </member>
        <member name="F:Starcounter.Response.failureException_">
            <summary>
            Exception that occurs when doing HttpClient and other calls.
            </summary>
        </member>
        <member name="F:Starcounter.Response.wsHandshakeResp_">
            <summary>
            Web-Socket handshake response bytes.
            </summary>
        </member>
        <member name="F:Starcounter.Response.customHeaderFields_">
            <summary>
            Dictionary of simple user custom headers.
            </summary>
        </member>
        <member name="F:Starcounter.Response.converter">
            <summary>
            Injection of implementation for converting a resource to an UTF8-encoded
            bytearray. 
            </summary>
        </member>
        <member name="F:Starcounter.Response.responseStreams_">
            <summary>
            Dictionary with response streams.
            </summary>
        </member>
        <member name="M:Starcounter.Response.CloneStaticResourceResponse">
            <summary>
            Clones existing static resource response object.
            </summary>
        </member>
        <member name="M:Starcounter.Response.SetResponseConverter(Starcounter.Internal.IResponseConverter)">
            <summary>
            
            </summary>
            <param name="converter"></param>
        </member>
        <member name="P:Starcounter.Response.FailureException">
            <summary>
            Returns the original exception occurred during async operation on HttpClient and such.
            </summary>
        </member>
        <member name="P:Starcounter.Response.AppName">
            <summary>
            Application by which the response was produced.
            </summary>
        </member>
        <member name="P:Starcounter.Response.Uris">
            <summary>
            The URIs.
            </summary>
        </member>
        <member name="P:Starcounter.Response.FilePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="P:Starcounter.Response.FileDirectory">
            <summary>
            The file directory
            </summary>
        </member>
        <member name="P:Starcounter.Response.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="P:Starcounter.Response.FileExists">
            <summary>
            The file exists
            </summary>
        </member>
        <member name="P:Starcounter.Response.FileModifiedDate">
            <summary>
            File modification date string (in RFC 1123 format).
            </summary>
        </member>
        <member name="P:Starcounter.Response.FileModified">
            <summary>
            File modification date.
            </summary>
        </member>
        <member name="P:Starcounter.Response.HandlingStatus">
            <summary>
            Handling status for this response.
            </summary>
        </member>
        <member name="T:Starcounter.Response.ConnectionFlags">
            <summary>
            Special connection flags.
            </summary>
        </member>
        <member name="P:Starcounter.Response.ConnFlags">
            <summary>
            Indicates if corresponding connection should be shut down.
            </summary>
        </member>
        <member name="P:Starcounter.Response.StatusCode">
            <summary>
            HTTP response status code.
            </summary>
        </member>
        <member name="P:Starcounter.Response.StatusDescription">
            <summary>
            Status description.
            </summary>
        </member>
        <member name="P:Starcounter.Response.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:Starcounter.Response.CacheControl">
            <summary>
            Cache control header string.
            </summary>
        </member>
        <member name="P:Starcounter.Response.ContentEncoding">
            <summary>
            Content encoding.
            </summary>
        </member>
        <member name="P:Starcounter.Response.StreamedBody">
            <summary>
            Streamed body.
            </summary>
        </member>
        <member name="P:Starcounter.Response.Body">
            <summary>
            Body string.
            </summary>
        </member>
        <member name="M:Starcounter.Response.GetContent``1">
            <summary>
            Getting content by type.
            </summary>
        </member>
        <member name="M:Starcounter.Response.GetContentString(Starcounter.MimeType)">
            <summary>
            Gets content as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Response.GetContentBytes">
            <summary>
            Gets content as bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Starcounter.Response.Content">
            <summary>
            Body string.
            </summary>
        </member>
        <member name="P:Starcounter.Response.BodyBytes">
            <summary>
            Body bytes.
            </summary>
        </member>
        <member name="M:Starcounter.Response.ResetAllCustomFields">
            <summary>
            Resets all custom fields.
            </summary>
        </member>
        <member name="P:Starcounter.Response.Resource">
            <summary>
            The response can be constructed in one of the following ways:
            
            1) using a complete binary HTTP response
            in the Uncompressed or Compressed property (this includes the header)
            
            2) using a IResource object in the Resource property
            
            3) using the BodyString property (does not include the header)
            
            4) using the BodyBytes property (does not include the header)
            </summary>
        </member>
        <member name="P:Starcounter.Response.Cookies">
            <summary>
            List of Set-Cookie headers.
            Each string is in the form of "key=value; options..."
            </summary>
        </member>
        <member name="P:Starcounter.Response.WsHandshakeResp">
            <summary>
            Saved WebSocket handshake response.
            </summary>
        </member>
        <member name="M:Starcounter.Response.ConstructFromFields(Starcounter.Request,System.Byte[])">
            <summary>
            Constructs response buffer from fields that are set.
            </summary>
        </member>
        <member name="M:Starcounter.Response.EstimateNeededSize(System.Byte[])">
            <summary>
            Estimates the amount of bytes needed to represent this resource.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="P:Starcounter.Response.IsSuccessStatusCode">
            <summary>
            Checks if status code is resembling success.
            </summary>
        </member>
        <member name="P:Starcounter.Response.ContentLength">
            <summary>
            The number of bytes of the content (i.e. the resource) of the uncompressed http response.
            </summary>
            <value>The length of the content.</value>
        </member>
        <member name="P:Starcounter.Response.BufferContainingResponse">
            <summary>
            Buffer containing the response bytes.
            </summary>
        </member>
        <member name="P:Starcounter.Response.ResponseSizeBytes">
            <summary>
            Getting full response length.
            </summary>
        </member>
        <member name="M:Starcounter.Response.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.Response" /> class.
            </summary>
        </member>
        <member name="M:Starcounter.Response.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Starcounter.Response" /> class from given byte buffer.
            </summary>
        </member>
        <member name="M:Starcounter.Response.GetAllHeaders">
            <summary>
            Getting all headers as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.Response.SetHeadersDictionary(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Setting new headers dictionary for response.
            </summary>
        </member>
        <member name="M:Starcounter.Response.GetHeader(System.String)">
            <summary>
            Get the value of specific header.
            </summary>
            <param name="name">Header name.</param>
            <returns>Header value.</returns>
        </member>
        <member name="M:Starcounter.Response.SetHeader(System.String,System.String)">
            <summary>
            Set the value of a specific header.
            </summary>
            <param name="name">Header name.</param>
            <param name="value">Header value.</param>
        </member>
        <member name="P:Starcounter.Response.Item(System.String)">
            <summary>
            Gets the response header with the specified name.
            </summary>
            <param name="name">The header name.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Starcounter.Response.ToString">
            <summary>
            Returns a string that represents the response.
            </summary>
        </member>
        <member name="T:Starcounter.HandlerStatus">
            <summary>
            Handler response status.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerStatus.Handled">
            <summary>
            The response is handled explicitly by some other means.
            </summary>
        </member>
        <member name="T:Starcounter.HandlerStatusInternal">
            <summary>
            Handler response status.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerStatusInternal.Done">
            <summary>
            The response is already sent.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerStatusInternal.AlreadyHandled">
            <summary>
            The response was handled by some explicit means.
            </summary>
        </member>
        <member name="F:Starcounter.HandlerStatusInternal.ResourceNotFound">
            <summary>
            For example static resource server returns this if resource is not found.
            </summary>
        </member>
        <member name="T:Starcounter.ResponseException">
            <summary>
            Response exception class which encapsulates the response thrown.
            </summary>
        </member>
        <member name="P:Starcounter.ResponseException.ResponseObject">
            <summary>
            Returns encapsulated Response object.
            </summary>
        </member>
        <member name="P:Starcounter.ResponseException.UserObject">
            <summary>
            Returns encapsulated User object.
            </summary>
        </member>
        <member name="M:Starcounter.ResponseException.#ctor(Starcounter.Response)">
            <summary>
            Response exception constructor.
            </summary>
            <param name="respObject"></param>
        </member>
        <member name="M:Starcounter.ResponseException.#ctor(Starcounter.Response,System.Object)">
            <summary>
            Response exception constructor.
            </summary>
            <param name="respObject"></param>
            <param name="userObject"></param>
        </member>
        <member name="T:Starcounter.StreamingInfo">
            <summary>
            Streaming information.
            </summary>
        </member>
        <member name="T:Starcounter.NetworkDataStream">
            <summary>
            Struct NetworkDataStream
            </summary>
        </member>
        <member name="M:Starcounter.NetworkDataStream.cm_get_shared_memory_chunk(System.UInt32,System.Byte**)">
            <summary>
            </summary>
        </member>
        <member name="F:Starcounter.NetworkDataStream.chunkIndex_">
            <summary>
            The chunk_index_
            </summary>
        </member>
        <member name="F:Starcounter.NetworkDataStream.gwWorkerId_">
            <summary>
            Gateway worker id from which the chunk came.
            </summary>
        </member>
        <member name="P:Starcounter.NetworkDataStream.GatewayWorkerId">
            <summary>
            Gateway worker id.
            </summary>
        </member>
        <member name="P:Starcounter.NetworkDataStream.ChunkIndex">
            <summary>
            Chunk index.
            </summary>
        </member>
        <member name="M:Starcounter.NetworkDataStream.GetChunkMemory">
            <summary>
            Gets chunk memory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.NetworkDataStream.#ctor(System.UInt32,System.Byte)">
            <summary>
            Prohibiting default constructor.
            </summary>
        </member>
        <member name="M:Starcounter.NetworkDataStream.SendResponse(System.Byte[],System.Int32,System.Int32,Starcounter.Response.ConnectionFlags)">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="length_bytes">The length in bytes.</param>
        </member>
        <member name="M:Starcounter.NetworkDataStream.SendResponseBufferInternal(System.Byte*,System.Int32,System.Int32,Starcounter.Response.ConnectionFlags)">
            <summary>
            Writes the given buffer.
            </summary>
            <param name="p">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="length_bytes">The length in bytes.</param>
        </member>
        <member name="M:Starcounter.NetworkDataStream.ReleaseChunk">
            <summary>
            Releases chunk.
            </summary>
        </member>
        <member name="M:Starcounter.NetworkDataStream.IsDestroyed">
            <summary>
            Checks if data stream is destroyed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Starcounter.NetworkDataStream.Destroy(System.Boolean)">
            <summary>
            Frees all data stream resources like chunks.
            </summary>
        </member>
        <member name="T:Starcounter.ScUri">
            <summary>
            Encapsulation of a Starcounter URI.
            </summary>
            <remarks>
            The URI scheme can be accessed from <see cref="F:Starcounter.ScUri.UriScheme"/>. The
            scheme-specific part of Starcounter URI's vary depending on what type of
            resource the URI references. The least common denominator, found in all
            types of Starcounter URI's, is the machine name.
            </remarks>
        </member>
        <member name="F:Starcounter.ScUri.UriScheme">
            <summary>
            The URI scheme used by Starcounter.
            </summary>
        </member>
        <member name="F:Starcounter.ScUri.UriSchemeWithColon">
            <summary>
            The URI scheme used by Starcounter followed by the colon required
            by  RFC 3986.
            </summary>
        </member>
        <member name="M:Starcounter.ScUri.#ctor(Starcounter.ScUriKind,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Starcounter.ScUri" />.
            </summary>
            <param name="kind">Kind of URI.</param>
            <param name="machine">Machine.</param>
            <param name="port">The port.</param>
            <param name="server">Server. Optional</param>
            <param name="instance">Instance. Optional.</param>
            <exception cref="T:System.ArgumentNullException">machine</exception>
            <exception cref="T:System.ArgumentException">machine</exception>
        </member>
        <member name="P:Starcounter.ScUri.MachineName">
            <summary>
            Gets the machine name.
            </summary>
        </member>
        <member name="P:Starcounter.ScUri.Port">
            <summary>
            Gets the host port.
            </summary>
        </member>
        <member name="P:Starcounter.ScUri.MachineUri">
            <summary>
            Gets the machine URI.
            </summary>
        </member>
        <member name="P:Starcounter.ScUri.ServerName">
            <summary>
            Gets the server name.
            </summary>
        </member>
        <member name="P:Starcounter.ScUri.ServerUri">
            <summary>
            Gets the server URI.
            </summary>
        </member>
        <member name="P:Starcounter.ScUri.DatabaseName">
            <summary>
            Gets the database name.
            </summary>
        </member>
        <member name="P:Starcounter.ScUri.DatabaseUri">
            <summary>
            Gets the instance URI.
            </summary>
        </member>
        <member name="P:Starcounter.ScUri.Kind">
            <summary>
            Gets the URI kind.
            </summary>
        </member>
        <member name="M:Starcounter.ScUri.MakeMachineUri(System.String)">
            <summary>
            Makes a machine URI.
            </summary>
            <param name="machineName">Machine name.</param>
            <returns>The machine URI.</returns>
        </member>
        <member name="M:Starcounter.ScUri.MakeMachineUri(System.String,System.Int32)">
            <summary>
            Makes a machine URI.
            </summary>
            <param name="machineName">Machine name.</param>
            <param name="port">The port.</param>
            <returns>The machine URI.</returns>
            <exception cref="T:System.ArgumentNullException">machineName</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">port</exception>
        </member>
        <member name="M:Starcounter.ScUri.MakeServerUri(System.String,System.String)">
            <summary>
            Makes an server URI.
            </summary>
            <param name="machineName">Machine name.</param>
            <param name="server">server name.</param>
            <returns>The server URI.</returns>
        </member>
        <member name="M:Starcounter.ScUri.MakeServerUri(System.String,System.Int32,System.String)">
            <summary>
            Makes an server URI.
            </summary>
            <param name="machineName">Machine name.</param>
            <param name="port">The port.</param>
            <param name="server">server name.</param>
            <returns>The server URI.</returns>
            <exception cref="T:System.ArgumentNullException">machineName</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">port</exception>
        </member>
        <member name="M:Starcounter.ScUri.MakeDatabaseUri(System.String,System.String,System.String)">
            <summary>
            Makes an database URI.
            </summary>
            <param name="machineName">Machine name.</param>
            <param name="server">server name.</param>
            <param name="instanceName">Instance name.</param>
            <returns>The instance URI.</returns>
        </member>
        <member name="M:Starcounter.ScUri.MakeDatabaseUri(System.String,System.Int32,System.String,System.String)">
            <summary>
            Makes an instance URI.
            </summary>
            <param name="machineName">Machine name.</param>
            <param name="port">The port.</param>
            <param name="server">server name.</param>
            <param name="instanceName">Instance name.</param>
            <returns>The instance URI.</returns>
            <exception cref="T:System.ArgumentNullException">machineName</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">port</exception>
        </member>
        <member name="M:Starcounter.ScUri.FromString(System.String)">
            <summary>
            Parses an URI and throws an exception in case of error.
            </summary>
            <param name="uri">A Starcounter URI.</param>
            <returns>The parsed <paramref name="uri"/>.</returns>
        </member>
        <member name="M:Starcounter.ScUri.FromString(System.String,System.Boolean)">
            <summary>
            Parses an URI and specifies whether an exception should be thrown in case of error.
            Format
            sc://[user:password@]hostname[:port][/servername[/databasename]]
            </summary>
            <param name="uri">A Starcounter URI.</param>
            <param name="throwOnError"><b>true</b> if an exception should be thrown in case of
            error, otherwise <b>false</b>.</param>
            <returns>The parsed <paramref name="uri"/>.</returns>
        </member>
        <member name="M:Starcounter.ScUri.FromUri(System.Uri)">
            <summary>
            Froms the URI.
            </summary>
            <param name="uri">The URI.</param>
            <returns>ScUri.</returns>
        </member>
        <member name="M:Starcounter.ScUri.FromUri(System.Uri,System.Boolean)">
            <summary>
            Froms the URI.
            </summary>
            <param name="uri">The URI.</param>
            <param name="throwOnError">if set to <c>true</c> [throw on error].</param>
            <returns>ScUri.</returns>
            <exception cref="T:System.ArgumentNullException">uri</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">uri;Cannot parse the URI.</exception>
        </member>
        <member name="M:Starcounter.ScUri.FromDbConnectionString(System.String)">
            <summary>
            Parses the given database connection string to a proper
            <see cref="T:Starcounter.ScUri"/>.
            </summary>
            <param name="connectionString">String to parse</param>
            <returns>A <see cref="T:Starcounter.ScUri"/> representing the database identified
            by <paramref name="connectionString"/>.
            </returns>
        </member>
        <member name="M:Starcounter.ScUri.FromDbConnectionString(System.String,System.String)">
            <summary>
            Parses the given database connection string to a proper
            <see cref="T:Starcounter.ScUri"/>.
            </summary>
            <param name="connectionString">String to parse</param>
            <param name="defaultServer">
            The default server to use if the connection string does not
            include a server name.</param>
            <returns>A <see cref="T:Starcounter.ScUri"/> representing the database identified
            by <paramref name="connectionString"/>.
            </returns>
        </member>
        <member name="M:Starcounter.ScUri.FromDbConnectionString(System.String,System.String,System.Func{System.String,System.Boolean})">
            <summary>
            Parses the given database connection string to a proper
            <see cref="T:Starcounter.ScUri"/>.
            </summary>
            <param name="connectionString">String to parse</param>
            <param name="defaultServer">
            The default server to use if the connection string does not
            include a server name.</param>
            <param name="isRecognizedServer">
            A callback used by the parser to identify a segment that could
            possibly be a server name.
            </param>
            <returns>A <see cref="T:Starcounter.ScUri"/> representing the database identified
            by <paramref name="connectionString"/>.
            </returns>
        </member>
        <member name="M:Starcounter.ScUri.ToString">
            <inheritdoc />
        </member>
        <member name="M:Starcounter.ScUri.op_Implicit(System.String)~Starcounter.ScUri">
            <summary>
            Converts a string into an <see cref="T:Starcounter.ScUri"/>.
            </summary>
            <param name="uri">The string to convert.</param>
            <returns>An <see cref="T:Starcounter.ScUri"/> corresponding to <paramref name="uri"/>.</returns>
        </member>
        <member name="M:Starcounter.ScUri.op_Implicit(Starcounter.ScUri)~System.String">
            <summary>
            Converts an <see cref="T:Starcounter.ScUri"/> into a string.
            </summary>
            <param name="uri">The <see cref="T:Starcounter.ScUri"/> to convert.</param>
            <returns>A string equivalent to <paramref name="uri"/>.</returns>
        </member>
        <member name="M:Starcounter.ScUri.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Starcounter.ScUri.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Starcounter.ScUri.Equals(System.String)">
            <summary>
            Equalses the specified URI string.
            </summary>
            <param name="uriString">The URI string.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Starcounter.ScUri.Equals(Starcounter.ScUri)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Starcounter.ScUri.GetMachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:Starcounter.ScUriExtensions">
            <summary>
            Extends the <see cref="T:Starcounter.ScUri"/> class with a set of utility
            methods allowing uri's to be the foundation for other kind of
            identifiers, such as named pipe names.
            </summary>
        </member>
        <member name="M:Starcounter.ScUriExtensions.MakeLocalServerPipeString(System.String)">
            <summary>
            Creates a local pipe name, based on the Starcounter URI syntax,
            for a server with the given name.
            </summary>
            <param name="serverName">The name of the server we want to create
            a local pipe name for.</param>
            <returns>A local pipe name for a server with the given name.</returns>
        </member>
        <member name="M:Starcounter.ScUriExtensions.MakeLocalDatabasePipeString(System.String,System.String)">
            <summary>
            Creates a local pipe name, based on the Starcounter URI syntax,
            for a database on a server with the given names. 
            </summary>
            <param name="serverName">The name of the server where the database
            lives.</param>
            <param name="databaseName">The name of the server we want to create
            a local pipe name for.</param>
            <returns>A local pipe name for a database with the given name,
            running under the control of the given server.</returns>
        </member>
        <member name="M:Starcounter.ScUriExtensions.ToLocalPipeString(Starcounter.ScUri)">
            <summary>
            Converts a <see cref="T:Starcounter.ScUri"/> to a corresponding local named
            pipe name.
            </summary>
            <param name="uri">The <see cref="T:Starcounter.ScUri"/> to be converted to
            a local named pipe name.</param>
            <returns>A local named pipe name corresponding to the resource
            as referenced by the given <see cref="T:Starcounter.ScUri"/>.</returns>
        </member>
        <member name="T:Starcounter.ScUriKind">
            <summary>
            Kinds of Starcounter URI.
            </summary>
        </member>
        <member name="F:Starcounter.ScUriKind.Machine">
            <summary>
            Machine.
            </summary>
        </member>
        <member name="F:Starcounter.ScUriKind.Server">
            <summary>
            Agent.
            </summary>
        </member>
        <member name="F:Starcounter.ScUriKind.Database">
            <summary>
            Instance.
            </summary>
        </member>
        <member name="P:Starcounter.TestFramework.TestLogger.TurnOffStatistics">
            <summary>
            Gets/Sets the statistics flag.
            </summary>
        </member>
        <member name="M:Starcounter.TestFramework.TestLogger.ReportStatistics(System.String,System.Double)">
            <summary>
            General function used to report statistics.
            </summary>
        </member>
        <member name="F:Starcounter.TestFramework.TestLogger._nightlyBuild">
            <summary>
            Returns true if its a nightly build.
            </summary>
        </member>
        <member name="F:Starcounter.TestFramework.TestLogger._isReleaseBuild">
            <summary>
            Returns True if its a Release build.
            </summary>
        </member>
        <member name="F:Starcounter.TestFramework.TestLogger._personalBuild">
            <summary>
            Returns True if its a personal build.
            </summary>
        </member>
        <member name="F:Starcounter.TestFramework.TestLogger._buildNumber">
            <summary>
            Returns the build number.
            </summary>
        </member>
        <member name="F:Starcounter.TestFramework.TestLogger._runningOnBuildServer">
            <summary>
            Returns True if the run is on the build server.
            </summary>
        </member>
        <member name="F:Starcounter.TestFramework.TestLogger._skipInprocess">
            <summary>
            Skips in-process tests on demand.
            </summary>
        </member>
        <member name="T:Starcounter.UdpSocket.RegisterUdpSocketHandlerDelegate">
            <summary>
            Register UDP socket handler.
            </summary>
            <param name="port"></param>
            <param name="appName"></param>
            <param name="rawCallback"></param>
            <param name="handlerInfo"></param>
        </member>
        <member name="F:Starcounter.UdpSocket.RegisterUdpSocketHandler_">
            <summary>
            Delegate to register UDP handler.
            </summary>
        </member>
        <member name="M:Starcounter.UdpSocket.InitUdpSockets(Starcounter.UdpSocket.RegisterUdpSocketHandlerDelegate)">
            <summary>
            Initializes UDP sockets.
            </summary>
            <param name="registerTcpHandlerNative"></param>
        </member>
        <member name="F:Starcounter.UdpSocket.MaxDatagramSize">
            <summary>
            Maximum datagram size.
            </summary>
        </member>
        <member name="M:Starcounter.UdpSocket.Send(System.Net.IPAddress,System.UInt16,System.UInt16,System.Byte[])">
            <summary>
            Sending UDP datagram.
            </summary>
            <param name="ipTo">IP address of destination.</param>
            <param name="portTo">Destination port.</param>
            <param name="portFrom">Port from which datagram should be sent.</param>
            <param name="datagram">Datagram bytes.</param>
        </member>
        <member name="M:Starcounter.UdpSocket.Send(System.Net.IPAddress,System.UInt16,System.UInt16,System.String)">
            <summary>
            Sending UDP datagram.
            </summary>
            <param name="ipTo">IP address of destination.</param>
            <param name="portTo">Destination port.</param>
            <param name="datagram">Datagram bytes.</param>
        </member>
        <member name="M:Starcounter.UdpSocket.Send(System.UInt32,System.UInt16,System.UInt16,System.Byte[])">
            <summary>
            Internal UDP datagram.
            </summary>
            <param name="ipToInt">IPv4 address of destination as integer.</param>
            <param name="portTo">Destination port.</param>
            <param name="datagram">Datagram bytes.</param>
        </member>
        <member name="F:Starcounter.UdpSocket.UdpRoundRobinGatewayWorkerId">
            <summary>
            Global round robin gateway worker id.
            </summary>
        </member>
        <member name="M:Starcounter.UdpSocket.SendUdpData(System.Byte,System.UInt32,System.Byte*,System.Int32,System.Int32)">
            <summary>
            Send response buffer.
            </summary>
            <param name="chunk_index"></param>
            <param name="p"></param>
            <param name="offset"></param>
            <param name="length_bytes"></param>
        </member>
        <member name="M:Starcounter.UdpSocket.PushChunksToGateway(System.UInt32,System.UInt16,System.UInt16,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Pushes server message over socket.
            </summary>
        </member>
    </members>
</doc>
